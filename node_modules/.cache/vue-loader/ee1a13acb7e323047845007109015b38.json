{"remainingRequest":"/Users/lebronchao/Desktop/Web Project/Big_Data_Visualization/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/lebronchao/Desktop/Web Project/Big_Data_Visualization/src/components/DataAnalysis/SensingData/index.vue?vue&type=style&index=0&id=325206df&lang=less&scoped=true&","dependencies":[{"path":"/Users/lebronchao/Desktop/Web Project/Big_Data_Visualization/src/components/DataAnalysis/SensingData/index.vue","mtime":1598942789554},{"path":"/Users/lebronchao/Desktop/Web Project/Big_Data_Visualization/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lebronchao/Desktop/Web Project/Big_Data_Visualization/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/lebronchao/Desktop/Web Project/Big_Data_Visualization/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/lebronchao/Desktop/Web Project/Big_Data_Visualization/node_modules/less-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lebronchao/Desktop/Web Project/Big_Data_Visualization/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lebronchao/Desktop/Web Project/Big_Data_Visualization/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLnRvcC12aWV3IHsKICBkaXNwbGF5OiBmbGV4OwogIGZsZXgtZGlyZWN0aW9uOiByb3c7Cn0KCi5zZWxlY3Rvci1jb250YWluZXIgewogIGRpc3BsYXk6IGZsZXg7CiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjsKICBtYXJnaW46IDAgMCAwIDJyZW07Cn0KCi5ncm91cC1zZWxlY3RvciB7CiAgZGlzcGxheTogZmxleDsKICBmbGV4LWRpcmVjdGlvbjogcm93Owp9Cgouc2VsZWN0b3IgewogIGRpc3BsYXk6IGZsZXg7CiAgZmxleC1kaXJlY3Rpb246IHJvdzsKICBtYXJnaW46IDJyZW0gMnJlbSAwIDFyZW07CiAgYWxpZ24taXRlbXM6IGNlbnRlcjsKfQoKLnNlbGVjdG9yLXRpdHRsZSB7CiAgbWFyZ2luOiAwIDAgMCAwOwp9CgouYWRkIHsKICBib3JkZXItcmFkaXVzOiAxMDAlOwogIGJhY2tncm91bmQ6ICMxODkwZmY7CiAgY29sb3I6IHdoaXRlOwogIHdpZHRoOiAycmVtOwogIGhlaWdodDogMnJlbTsKICBkaXNwbGF5OiBmbGV4OwogIGp1c3RpZnktY29udGVudDogY2VudGVyOwogIGFsaWduLWl0ZW1zOiBjZW50ZXI7CiAgZm9udC1zaXplOiAxLjVyZW07CiAgcGFkZGluZzogMDsKICBtYXJnaW46IDJyZW0gMXJlbSAwIDAuNXJlbTsKICBib3JkZXI6ICMxODkwZmY7Cn0KCi5pbmRleCB7CiAgYm9yZGVyLXJhZGl1czogMTAwJTsKICBiYWNrZ3JvdW5kOiAjMTg5MGZmOwogIGNvbG9yOiB3aGl0ZTsKICB3aWR0aDogMS41cmVtOwogIGhlaWdodDogMS41cmVtOwogIGRpc3BsYXk6IGZsZXg7CiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7CiAgYWxpZ24taXRlbXM6IGNlbnRlcjsKICBmb250LXNpemU6IDFyZW07CiAgcGFkZGluZzogMDsKICBtYXJnaW46IDAgMXJlbSAwIDA7Cn0KCiNkYXRhLWNoYXJ0IHsKICBoZWlnaHQ6IDM2cmVtOwogIHdpZHRoOiA4MHJlbTsKICBtYXJnaW46IDAgMCAwIDFyZW07Cn0KCi5xdWVyeSB7CiAgaGVpZ2h0OiAycmVtOwogIHdpZHRoOiA0cmVtOwogIGRpc3BsYXk6IGZsZXg7CiAgYm9yZGVyOiBub25lOwogIGJhY2tncm91bmQ6ICMxODkwZmY7CiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7CiAgYWxpZ24taXRlbXM6IGNlbnRlcjsKICBjb2xvcjogd2hpdGU7CiAgZm9udC1zaXplOiAxLjFyZW07CiAgYm9yZGVyLXJhZGl1czogMC41cmVtOwogIG1hcmdpbjogMnJlbSAxcmVtIDAgMDsKfQoKLnBpY2tlciB7CiAgd2lkdGg6IDEwcmVtOwp9CgouZGF0ZS1waWNrZXIgewogIC5lbC1pbnB1dF9faW5uZXIgewogICAgd2lkdGg6IDVyZW07CiAgICBoZWlnaHQ6IDJyZW07CiAgfQp9Cg=="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAidA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/components/DataAnalysis/SensingData","sourcesContent":["<template>\n  <div>\n    <div class=\"top-view\">\n      <div class=\"selector-container\">\n        <div class=\"group-selector\" v-for=\"group in select\" :key=\"group.index\">\n          <div class=\"selector\">\n            <div class=\"index\">{{ group.index }}</div>\n            <div class=\"selector-tittle\">传感器类型：</div>\n            <el-select\n                class=\"picker\"\n                v-model=\"sensorType\">\n              <el-option\n                  class=\"picker\"\n                  v-for=\"item in sensorList\"\n                  :key=\"item.index\"\n                  :value=\"item\">\n              </el-option>\n            </el-select>\n          </div>\n          <div class=\"selector\">\n            <div class=\"selector-tittle\">设备节点：</div>\n            <el-select\n                class=\"picker\"\n                v-model=\"group.deviceId\">\n              <el-option\n                  class=\"picker\"\n                  v-for=\"item in deviceList\"\n                  :key=\"item.index\"\n                  :value=\"item.DeviceID\"\n                  :disabled=\"item.disabled\">\n              </el-option>\n            </el-select>\n          </div>\n          <div class=\"selector\">\n            <div class=\"selector-tittle\">时间范围：</div>\n            <el-date-picker\n                class=\"date-picker\"\n                v-model=\"dateValue\"\n                type=\"daterange\"\n                align=\"right\"\n                unlink-panels\n                range-separator=\"至\"\n                start-placeholder=\"开始日期\"\n                end-placeholder=\"结束日期\"\n                value-format=\"yyyy-MM-dd\"\n                :picker-options=\"datePickerOptions\"\n            >\n            </el-date-picker>\n          </div>\n        </div>\n      </div>\n      <button class=\"query\" @click=\"getData\">查询</button>\n      <button class=\"add\" @click=\"add\">+</button>\n      <button class=\"add\" @click=\"sub\">-</button>\n    </div>\n    <div class=\"bottom-view\">\n      <v-chart id=\"data-chart\" :options=\"chartOption\"/>\n    </div>\n  </div>\n</template>\n\n<script>\nimport {getDeviceList, getSensorData} from '../../../api/DataAnalysis'\n\nexport default {\n  name: \"index\",\n  data() {\n    return {\n      //设备列表 待请求数据赋值\n      //数据结构：\n      // {\n      //   deviceID: '123',\n      //   sensorList: ['温度', '湿度', '光照'],\n      //   disabled: false\n      // }\n      deviceList: [],\n      //选择的设备\n      select: [\n        {\n          index: 1,\n          deviceId: '',\n        }\n      ],\n      //可选择的传感器类型\n      sensorList: ['温度', '湿度', '光照'],\n      //选择的传感器类型\n      sensorType: '',\n      //日期挂载变量\n      dateValue: '',\n      startTime: {\n        year: '',\n        month: '',\n        day: ''\n      },\n      endTime: {\n        year: '',\n        month: '',\n        day: ''\n      },\n      //日期选择器配置项\n      datePickerOptions: {\n        shortcuts: [{\n          text: '最近一周',\n          onClick(picker) {\n            const end = new Date();\n            const start = new Date();\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 7);\n            picker.$emit('pick', [start, end]);\n          }\n        }, {\n          text: '最近一个月',\n          onClick(picker) {\n            const end = new Date();\n            const start = new Date();\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 30);\n            picker.$emit('pick', [start, end]);\n          }\n        }, {\n          text: '最近三个月',\n          onClick(picker) {\n            const end = new Date();\n            const start = new Date();\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 90);\n            picker.$emit('pick', [start, end]);\n          }\n        }]\n      },\n      //数据图表配置项\n      chartOption: {\n        title: {\n          text: '',\n          textStyle: {\n            align: 'center',\n            color: '#54D8FF',\n            fontSize: this.$rem(1),\n            fontWeight: this.$rem(25)\n          },\n          top: '0%',\n          left: 'center',\n        },\n        legend: {\n          icon: 'circle',\n          top: '5%',\n          right: '10%',\n          itemWidth: 6,\n          itemGap: 20,\n          textStyle: {\n            fontSize: this.$rem(0.8),\n            color: '#556677'\n          }\n        },\n        tooltip: {\n          trigger: 'axis',\n          formatter: '',\n          axisPointer: {\n            lineStyle: {\n              color: \"#54D8FF\"\n            },\n          },\n        },\n        grid: {\n          top: '15%',\n          left: '5%',\n          right: '9%',\n          bottom: '15%',\n          containLabel: true\n        },\n        xAxis: [{\n          type: 'category',\n          name: '日期',\n          splitNumber: 8,\n          nameTextStyle: {\n            color: '#A1A0AE',\n            fontSize: this.$rem(0.7),\n            grid: {\n              x: this.$rem(1)\n            }\n          },\n          axisLine: {\n            show: true,\n            lineStyle: {\n              color: '#EFF3F6',\n            }\n          },\n          splitArea: {\n            color: '#f00',\n            lineStyle: {\n              color: '#f00'\n            },\n          },\n          axisTick: {\n            show: false\n          },\n          axisLabel: {\n            lineStyle: {\n              color: '#EFF3F6',\n            },\n            interval: 0,\n            textStyle: {\n              color: '#A1A0AE',\n              fontSize: this.$rem(0.7)\n            }\n          },\n          splitLine: {\n            show: true,\n            lineStyle: {\n              color: '#EFF3F6'\n            }\n          },\n          boundaryGap: false,\n          data: [],\n\n        }],\n\n        yAxis: [{\n          type: 'value',\n          name: '',\n          nameTextStyle: {\n            color: \"#A1A0AE\",\n            fontSize: this.$rem(0.8)\n          },\n          min: null,\n          max: null,\n          splitNumber: 5,\n          splitLine: {\n            show: true,\n            lineStyle: {\n              color: '#EFF3F6'\n            }\n          },\n          axisLine: {\n            show: true,\n            lineStyle: {\n              color: '#EFF3F6'\n            }\n          },\n          axisLabel: {\n            show: true,\n            margin: this.$rem(0.8),\n            textStyle: {\n              color: '#A1A0AE',\n              fontSize: this.$rem(0.7)\n            }\n          },\n          axisTick: {\n            show: false,\n          },\n        },],\n        series: []\n      }\n    }\n  },\n  methods: {\n    //增加设备选择器\n    add() {\n      if (this.select.length >= 5) {\n        alert('最多只能选择五个!')\n      } else {\n        this.select.push({index: this.select.length + 1, deviceId: ''})\n      }\n    },\n    //减少设备选择器\n    sub() {\n      if (this.select.length <= 1) {\n        alert('最少保留一个!')\n      } else {\n        this.select.pop()\n      }\n      this.chartOption.series.pop()\n    },\n    //请求数据\n    getData() {\n      getSensorData(this)\n    },\n    resizeHandle() {\n      let myChart1 = this.$echarts.init(document.getElementById('data-chart'))\n      myChart1.resize()\n    },\n    //将多个设备的数据加到图表里\n    addSeries(chartData, max) {\n      /*\n      * 预定不同曲线的颜色\n      * date 日期数据中转变量\n      * data 数据项中转变量\n      * _date 最多数据的设备的日期中转变量（设为x轴）\n      * */\n      let colorList = ['#54D8FF', 'red', 'orange', 'pink', '#9272A3'],\n          date,\n          data = [],\n          _date = []\n      this.chartOption.series = []\n      for (let i = 0; i < chartData.length; i++) {\n        data = []\n        chartData[i].data.forEach((item) => {\n          if (i == 0) {\n            _date.push(`${item.Time.year}-${item.Time.month}-${item.Time.day}\\n${item.Time.hour}:${item.Time.minute}`)\n          }\n          date = `${item.Time.year}-${item.Time.month}-${item.Time.day}\\n${item.Time.hour}:${item.Time.minute}`\n          data.push([date, item.value])\n        })\n        this.chartOption.series.push(\n            {\n              name: chartData[i].deviceId,\n              type: 'line',\n              smooth: true, //是否平滑\n              showAllSymbol: true,\n              symbol: 'circle',\n              showSymbol: false,\n              symbolSize: this.$rem(0.1),\n              lineStyle: {\n                normal: {\n                  color: colorList[i],\n                  shadowColor: colorList[i],\n                  shadowBlur: 0,\n                  shadowOffsetY: 0,\n                  shadowOffsetX: 0,\n                  width: this.$rem(0.12)\n                },\n              },\n              label: {\n                show: true,\n                position: 'top',\n                textStyle: {\n                  color: colorList[i],\n                  fontSize: this.$rem(0.7)\n                }\n              },\n\n              itemStyle: {\n                color: colorList[i],\n              },\n              tooltip: {\n                show: true,\n              },\n              data: data\n            }\n        )\n      }\n      //如果数据项多于10条  则计算隔n条显示一个x轴数据项\n      let interval = parseInt((this.chartOption.series[0].data.length) / 10)\n      this.chartOption.xAxis[0].axisLabel.interval = 0\n      if ((this.chartOption.series[0].data.length) > 10) {\n        this.chartOption.xAxis[0].axisLabel.interval = interval\n      }\n      //设置y轴最大值\n      this.chartOption.yAxis[0].max = max * 1.3\n      //设置x轴\n      this.chartOption.xAxis[0].data = _date\n      //配置浮动提示框\n      switch (this.sensorType) {\n        case '温度':\n          this.chartOption.tooltip.formatter = function (params) {\n            var result = '温度<br/>' + params[0].name;\n            params.forEach(function (item) {\n              if (item.data) {\n                result += '<br/>' + '<span style=\"display:inline-block;margin-right:5px;border-radius:10px;width:9px;height:9px;background-color:' + item.color + '\"></span>' +\n                    item.seriesName + ' : ' + item.data[1] + '℃';\n              }\n            });\n            return result;\n          }\n          break\n        case '湿度':\n          this.chartOption.tooltip.formatter = this.chartOption.tooltip.formatter = function (params) {\n            var result = '湿度<br/>' + params[0].name;\n            params.forEach(function (item) {\n\n              if (item.data) {\n                result += '<br/>' + '<span style=\"display:inline-block;margin-right:5px;border-radius:10px;width:9px;height:9px;background-color:' + item.color + '\"></span>' +\n                    item.seriesName + ' : ' + item.data[1] + '%';\n              }\n            });\n            return result;\n          }\n          break\n        case '光照':\n          this.chartOption.tooltip.formatter = this.chartOption.tooltip.formatter = function (params) {\n            var result = '光照<br/>' + params[0].name;\n            params.forEach(function (item) {\n              if (item.data) {\n                result += '<br/>' + '<span style=\"display:inline-block;margin-right:5px;border-radius:10px;width:9px;height:9px;background-color:' + item.color + '\"></span>' +\n                    item.seriesName + ' : ' + item.data[1] + 'Lux';\n              }\n            });\n            return result;\n          }\n          break\n      }\n    }\n  },\n  watch: {\n    //监听传感器类型并及时禁止选择无此传感器的设备\n    sensorType: {\n      handler(newValue) {\n        let tep\n        switch (newValue) {\n          case '温度':\n            tep = 'temp';\n            break\n          case '湿度':\n            tep = 'hum';\n            break\n          case '光照':\n            tep = 'lux';\n            break\n        }\n        for (let i = 0; i < this.deviceList.length; i++) {\n          if (this.deviceList[i].sensorList.includes(tep)) {\n            this.deviceList[i].disabled = false\n          } else {\n            this.deviceList[i].disabled = true\n          }\n        }\n        if (newValue == '温度') {\n          this.chartOption.yAxis[0].name = '温度/ ℃'\n          this.chartOption.yAxis[0].min = 0\n          this.chartOption.yAxis[0].max = 50\n          this.chartOption.yAxis[0].splitNumber = 5\n        } else if (newValue == '湿度') {\n          this.chartOption.yAxis[0].name = '湿度/ %'\n          this.chartOption.yAxis[0].min = 0\n          this.chartOption.yAxis[0].max = 100\n          this.chartOption.yAxis[0].splitNumber = 5\n        } else if (newValue == '光照') {\n          this.chartOption.yAxis[0].name = '光照/ Lux'\n          this.chartOption.yAxis[0].min = 0\n          this.chartOption.yAxis[0].max = 10000\n          this.chartOption.yAxis[0].splitNumber = 5\n        }\n      },\n      immediate: true\n    },\n    dateValue: {\n      handler(newValue) {\n\n        let start = newValue[0].split('-')\n        let end = newValue[1].split('-')\n\n        this.startTime.year = start[0]\n        this.startTime.month = start[1]\n        this.startTime.day = start[2]\n\n        this.endTime.year = end[0]\n        this.endTime.month = end[1]\n        this.endTime.day = end[2]\n\n\n      },\n      immediate: true,\n      deep: true\n    }\n  },\n  mounted() {\n    //页面挂载即请求设备列表数据\n    getDeviceList(this)\n    //监听窗口大小变化执行图表初始化  实现自适应\n    var resizeEvt1 = 'orientationchange' in window ? 'orientationchange' : 'resize'\n    window.addEventListener(resizeEvt1, this.resizeHandle, false);\n    document.addEventListener('DOMContentLoaded', this.resizeHandle, false);\n\n  }\n}\n</script>\n\n<style lang=\"less\" scoped>\n.top-view {\n  display: flex;\n  flex-direction: row;\n}\n\n.selector-container {\n  display: flex;\n  flex-direction: column;\n  margin: 0 0 0 2rem;\n}\n\n.group-selector {\n  display: flex;\n  flex-direction: row;\n}\n\n.selector {\n  display: flex;\n  flex-direction: row;\n  margin: 2rem 2rem 0 1rem;\n  align-items: center;\n}\n\n.selector-tittle {\n  margin: 0 0 0 0;\n}\n\n.add {\n  border-radius: 100%;\n  background: #1890ff;\n  color: white;\n  width: 2rem;\n  height: 2rem;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 1.5rem;\n  padding: 0;\n  margin: 2rem 1rem 0 0.5rem;\n  border: #1890ff;\n}\n\n.index {\n  border-radius: 100%;\n  background: #1890ff;\n  color: white;\n  width: 1.5rem;\n  height: 1.5rem;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 1rem;\n  padding: 0;\n  margin: 0 1rem 0 0;\n}\n\n#data-chart {\n  height: 36rem;\n  width: 80rem;\n  margin: 0 0 0 1rem;\n}\n\n.query {\n  height: 2rem;\n  width: 4rem;\n  display: flex;\n  border: none;\n  background: #1890ff;\n  justify-content: center;\n  align-items: center;\n  color: white;\n  font-size: 1.1rem;\n  border-radius: 0.5rem;\n  margin: 2rem 1rem 0 0;\n}\n\n.picker {\n  width: 10rem;\n}\n\n.date-picker {\n  .el-input__inner {\n    width: 5rem;\n    height: 2rem;\n  }\n}\n</style>"]}]}