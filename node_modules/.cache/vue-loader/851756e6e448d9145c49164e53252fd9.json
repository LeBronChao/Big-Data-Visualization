{"remainingRequest":"/Users/lebronchao/Desktop/Web Project/Big_Data_Visualization/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/lebronchao/Desktop/Web Project/Big_Data_Visualization/src/components/DataAnalysis/TrajectoryData/index.vue?vue&type=style&index=0&id=62bfa272&scoped=true&lang=css&","dependencies":[{"path":"/Users/lebronchao/Desktop/Web Project/Big_Data_Visualization/src/components/DataAnalysis/TrajectoryData/index.vue","mtime":1599227133561},{"path":"/Users/lebronchao/Desktop/Web Project/Big_Data_Visualization/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lebronchao/Desktop/Web Project/Big_Data_Visualization/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/lebronchao/Desktop/Web Project/Big_Data_Visualization/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/lebronchao/Desktop/Web Project/Big_Data_Visualization/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lebronchao/Desktop/Web Project/Big_Data_Visualization/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoudHJhamVjdG9yeSB7CiAgaGVpZ2h0OiAzOHJlbTsKICBib3JkZXI6IDFyZW0gc29saWQgd2hpdGU7CiAgYm9yZGVyLXJhZGl1czogMXJlbTsKfQo="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyFA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/components/DataAnalysis/TrajectoryData","sourcesContent":["<template>\n  <div>\n    <div class=\"trajectory\" id=\"tra-map\">\n    </div>\n  </div>\n</template>\n<script type=\"text/javascript\"\n        src=\"//api.map.baidu.com/api?v=1.0&type=webgl&ak=lSZms8vUZ0bZns6rVHLWe3RQLaovokQM\"></script>\n<script type=\"text/javascript\" src=\"//api.map.baidu.com/library/TrackAnimation/src/TrackAnimation_min.js\"></script>\n<script>\nimport {trajRequest} from '../../../api/HomePage/DataAnalysis'\nexport default {\n  name: \"index\",\n  data() {\n    return {\n      path: [\n        {\n          'lng': 114.405112,\n          'lat': 22.709605\n        },\n        {\n          'lng': 114.40478,\n          'lat': 22.710089\n        },\n        {\n          'lng': 114.404856,\n          'lat': 22.710164\n        }, {\n          'lng': 114.405606,\n          'lat': 22.710547\n        }, {\n          'lng': 114.406909,\n          'lat': 22.711168\n        }, {\n          'lng': 114.407839,\n          'lat': 22.711456\n        }, {\n          'lng': 114.409837,\n          'lat': 22.711576\n        }, {\n          'lng': 114.411589,\n          'lat': 22.711601\n        }, {\n          'lng': 114.412932,\n          'lat': 22.711568\n        }, {\n          'lng': 114.412887,\n          'lat': 22.710347\n        }, {\n          'lng': 114.41273,\n          'lat': 22.709055\n        }]\n    }\n  },\n  methods: {\n    mapInit() {\n      var bmap = new BMapGL.Map(\"tra-map\");\n      var convertor = new BMap.Convertor();// 创建Map实例\n      bmap.centerAndZoom(new BMapGL.Point(114.40555, 22.707533), 16);    // 初始化地图，设置中心点坐标和地图级别\n      bmap.enableScrollWheelZoom(true);// 开启鼠标滚轮缩放\n      let scaleCtrl = new BMapGL.ScaleControl({anchor: BMAP_ANCHOR_BOTTOM_RIGHT});  // 添加比例尺控件\n      bmap.addControl(scaleCtrl);\n      let zoomCtrl = new BMapGL.ZoomControl({anchor: BMAP_ANCHOR_TOP_RIGHT});  // 添加缩放控件\n      bmap.addControl(zoomCtrl);\n      let navi3DCtrl = new BMapGL.NavigationControl3D();  // 添加3D控件\n      bmap.addControl(navi3DCtrl);\n\n      var point = [];\n      for (var i = 0; i < this.path.length; i++) {\n        point.push(new BMapGL.Point(this.path[i].lng, this.path[i].lat));\n      }\n      convertor.translate(point, 1, point.length)\n      var pl = new BMapGL.Polyline(point);\n      var trackAni = new BMapGLLib.TrackAnimation(bmap, pl, {\n        overallView: true, // 动画完成后自动调整视野到总览\n        tilt: 30,          // 轨迹播放的角度，默认为55\n        duration: 20000,   // 动画持续时长，默认为10000，单位ms\n        delay: 1000        // 动画开始的延迟，默认0，单位ms\n      });\n      trackAni.start();\n    }\n  },\n  async mounted() {\n    await trajRequest(this)\n  }\n}\n</script>\n\n<style scoped>\n.trajectory {\n  height: 38rem;\n  border: 1rem solid white;\n  border-radius: 1rem;\n}\n</style>"]}]}