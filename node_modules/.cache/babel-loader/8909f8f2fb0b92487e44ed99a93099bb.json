{"remainingRequest":"/Users/lebronchao/Desktop/Web开发项目/Big_Data_Visualization/node_modules/thread-loader/dist/cjs.js!/Users/lebronchao/Desktop/Web开发项目/Big_Data_Visualization/node_modules/babel-loader/lib/index.js!/Users/lebronchao/Desktop/Web开发项目/Big_Data_Visualization/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/lebronchao/Desktop/Web开发项目/Big_Data_Visualization/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/lebronchao/Desktop/Web开发项目/Big_Data_Visualization/src/components/DataAnalysis/SensingData/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/lebronchao/Desktop/Web开发项目/Big_Data_Visualization/src/components/DataAnalysis/SensingData/index.vue","mtime":1597826835699},{"path":"/Users/lebronchao/Desktop/Web开发项目/Big_Data_Visualization/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lebronchao/Desktop/Web开发项目/Big_Data_Visualization/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lebronchao/Desktop/Web开发项目/Big_Data_Visualization/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/lebronchao/Desktop/Web开发项目/Big_Data_Visualization/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lebronchao/Desktop/Web开发项目/Big_Data_Visualization/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZm9yLWVhY2giOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5pbmNsdWRlcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmZ1bmN0aW9uLm5hbWUiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAuZXhlYyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5pbmNsdWRlcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5zcGxpdCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuZm9yLWVhY2giOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgeyBnZXREZXZpY2VMaXN0LCBnZXRTZW5zb3JEYXRhIH0gZnJvbSAnLi4vLi4vLi4vYXBpL3JlcXVlc3QnOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogImluZGV4IiwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgLy/orr7lpIfliJfooagg5b6F6K+35rGC5pWw5o2u6LWL5YC8CiAgICAgIC8v5pWw5o2u57uT5p6E77yaCiAgICAgIC8vIHsKICAgICAgLy8gICBkZXZpY2VJRDogJzEyMycsCiAgICAgIC8vICAgc2Vuc29yTGlzdDogWyfmuKnluqYnLCAn5rm/5bqmJywgJ+WFieeFpyddLAogICAgICAvLyAgIGRpc2FibGVkOiBmYWxzZQogICAgICAvLyB9CiAgICAgIGRldmljZUxpc3Q6IFtdLAogICAgICAvL+mAieaLqeeahOiuvuWkhwogICAgICBzZWxlY3Q6IFt7CiAgICAgICAgaW5kZXg6IDEsCiAgICAgICAgZGV2aWNlSWQ6ICcnCiAgICAgIH1dLAogICAgICAvL+WPr+mAieaLqeeahOS8oOaEn+WZqOexu+WeiwogICAgICBzZW5zb3JMaXN0OiBbJ+a4qeW6picsICfmub/luqYnLCAn5YWJ54WnJ10sCiAgICAgIC8v6YCJ5oup55qE5Lyg5oSf5Zmo57G75Z6LCiAgICAgIHNlbnNvclR5cGU6ICcnLAogICAgICAvL+aXpeacn+aMgui9veWPmOmHjwogICAgICBkYXRlVmFsdWU6ICcnLAogICAgICBzdGFydFRpbWU6IHsKICAgICAgICB5ZWFyOiAnJywKICAgICAgICBtb250aDogJycsCiAgICAgICAgZGF5OiAnJwogICAgICB9LAogICAgICBlbmRUaW1lOiB7CiAgICAgICAgeWVhcjogJycsCiAgICAgICAgbW9udGg6ICcnLAogICAgICAgIGRheTogJycKICAgICAgfSwKICAgICAgLy/ml6XmnJ/pgInmi6nlmajphY3nva7pobkKICAgICAgZGF0ZVBpY2tlck9wdGlvbnM6IHsKICAgICAgICBzaG9ydGN1dHM6IFt7CiAgICAgICAgICB0ZXh0OiAn5pyA6L+R5LiA5ZGoJywKICAgICAgICAgIG9uQ2xpY2s6IGZ1bmN0aW9uIG9uQ2xpY2socGlja2VyKSB7CiAgICAgICAgICAgIHZhciBlbmQgPSBuZXcgRGF0ZSgpOwogICAgICAgICAgICB2YXIgc3RhcnQgPSBuZXcgRGF0ZSgpOwogICAgICAgICAgICBzdGFydC5zZXRUaW1lKHN0YXJ0LmdldFRpbWUoKSAtIDM2MDAgKiAxMDAwICogMjQgKiA3KTsKICAgICAgICAgICAgcGlja2VyLiRlbWl0KCdwaWNrJywgW3N0YXJ0LCBlbmRdKTsKICAgICAgICAgIH0KICAgICAgICB9LCB7CiAgICAgICAgICB0ZXh0OiAn5pyA6L+R5LiA5Liq5pyIJywKICAgICAgICAgIG9uQ2xpY2s6IGZ1bmN0aW9uIG9uQ2xpY2socGlja2VyKSB7CiAgICAgICAgICAgIHZhciBlbmQgPSBuZXcgRGF0ZSgpOwogICAgICAgICAgICB2YXIgc3RhcnQgPSBuZXcgRGF0ZSgpOwogICAgICAgICAgICBzdGFydC5zZXRUaW1lKHN0YXJ0LmdldFRpbWUoKSAtIDM2MDAgKiAxMDAwICogMjQgKiAzMCk7CiAgICAgICAgICAgIHBpY2tlci4kZW1pdCgncGljaycsIFtzdGFydCwgZW5kXSk7CiAgICAgICAgICB9CiAgICAgICAgfSwgewogICAgICAgICAgdGV4dDogJ+acgOi/keS4ieS4quaciCcsCiAgICAgICAgICBvbkNsaWNrOiBmdW5jdGlvbiBvbkNsaWNrKHBpY2tlcikgewogICAgICAgICAgICB2YXIgZW5kID0gbmV3IERhdGUoKTsKICAgICAgICAgICAgdmFyIHN0YXJ0ID0gbmV3IERhdGUoKTsKICAgICAgICAgICAgc3RhcnQuc2V0VGltZShzdGFydC5nZXRUaW1lKCkgLSAzNjAwICogMTAwMCAqIDI0ICogOTApOwogICAgICAgICAgICBwaWNrZXIuJGVtaXQoJ3BpY2snLCBbc3RhcnQsIGVuZF0pOwogICAgICAgICAgfQogICAgICAgIH1dCiAgICAgIH0sCiAgICAgIC8v5pWw5o2u5Zu+6KGo6YWN572u6aG5CiAgICAgIGNoYXJ0T3B0aW9uOiB7CiAgICAgICAgdGl0bGU6IHsKICAgICAgICAgIHRleHQ6ICcnLAogICAgICAgICAgdGV4dFN0eWxlOiB7CiAgICAgICAgICAgIGFsaWduOiAnY2VudGVyJywKICAgICAgICAgICAgY29sb3I6ICcjNTREOEZGJywKICAgICAgICAgICAgZm9udFNpemU6IHRoaXMuJHJlbSgxKSwKICAgICAgICAgICAgZm9udFdlaWdodDogdGhpcy4kcmVtKDI1KQogICAgICAgICAgfSwKICAgICAgICAgIHRvcDogJzAlJywKICAgICAgICAgIGxlZnQ6ICdjZW50ZXInCiAgICAgICAgfSwKICAgICAgICBsZWdlbmQ6IHsKICAgICAgICAgIGljb246ICdjaXJjbGUnLAogICAgICAgICAgdG9wOiAnNSUnLAogICAgICAgICAgcmlnaHQ6ICcxMCUnLAogICAgICAgICAgaXRlbVdpZHRoOiA2LAogICAgICAgICAgaXRlbUdhcDogMjAsCiAgICAgICAgICB0ZXh0U3R5bGU6IHsKICAgICAgICAgICAgZm9udFNpemU6IHRoaXMuJHJlbSgwLjgpLAogICAgICAgICAgICBjb2xvcjogJyM1NTY2NzcnCiAgICAgICAgICB9CiAgICAgICAgfSwKICAgICAgICB0b29sdGlwOiB7CiAgICAgICAgICB0cmlnZ2VyOiAnYXhpcycsCiAgICAgICAgICBmb3JtYXR0ZXI6ICd7Yn08YnIgLz57YX06IHtjfSDihIMnLAogICAgICAgICAgYXhpc1BvaW50ZXI6IHsKICAgICAgICAgICAgbGluZVN0eWxlOiB7CiAgICAgICAgICAgICAgY29sb3I6ICIjNTREOEZGIgogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwKICAgICAgICBncmlkOiB7CiAgICAgICAgICB0b3A6ICcxNSUnLAogICAgICAgICAgbGVmdDogJzUlJywKICAgICAgICAgIHJpZ2h0OiAnOSUnLAogICAgICAgICAgYm90dG9tOiAnMTUlJywKICAgICAgICAgIGNvbnRhaW5MYWJlbDogdHJ1ZQogICAgICAgIH0sCiAgICAgICAgeEF4aXM6IFt7CiAgICAgICAgICB0eXBlOiAnY2F0ZWdvcnknLAogICAgICAgICAgbmFtZTogJ+aXpeacnycsCiAgICAgICAgICBzcGxpdE51bWJlcjogOCwKICAgICAgICAgIG5hbWVUZXh0U3R5bGU6IHsKICAgICAgICAgICAgY29sb3I6ICcjQTFBMEFFJywKICAgICAgICAgICAgZm9udFNpemU6IHRoaXMuJHJlbSgwLjcpLAogICAgICAgICAgICBncmlkOiB7CiAgICAgICAgICAgICAgeDogdGhpcy4kcmVtKDEpCiAgICAgICAgICAgIH0KICAgICAgICAgIH0sCiAgICAgICAgICBheGlzTGluZTogewogICAgICAgICAgICBzaG93OiB0cnVlLAogICAgICAgICAgICBsaW5lU3R5bGU6IHsKICAgICAgICAgICAgICBjb2xvcjogJyNFRkYzRjYnCiAgICAgICAgICAgIH0KICAgICAgICAgIH0sCiAgICAgICAgICBzcGxpdEFyZWE6IHsKICAgICAgICAgICAgY29sb3I6ICcjZjAwJywKICAgICAgICAgICAgbGluZVN0eWxlOiB7CiAgICAgICAgICAgICAgY29sb3I6ICcjZjAwJwogICAgICAgICAgICB9CiAgICAgICAgICB9LAogICAgICAgICAgYXhpc1RpY2s6IHsKICAgICAgICAgICAgc2hvdzogZmFsc2UKICAgICAgICAgIH0sCiAgICAgICAgICBheGlzTGFiZWw6IHsKICAgICAgICAgICAgbGluZVN0eWxlOiB7CiAgICAgICAgICAgICAgY29sb3I6ICcjRUZGM0Y2JwogICAgICAgICAgICB9LAogICAgICAgICAgICB0ZXh0U3R5bGU6IHsKICAgICAgICAgICAgICBjb2xvcjogJyNBMUEwQUUnLAogICAgICAgICAgICAgIGZvbnRTaXplOiB0aGlzLiRyZW0oMC43KQogICAgICAgICAgICB9CiAgICAgICAgICB9LAogICAgICAgICAgc3BsaXRMaW5lOiB7CiAgICAgICAgICAgIHNob3c6IHRydWUsCiAgICAgICAgICAgIGxpbmVTdHlsZTogewogICAgICAgICAgICAgIGNvbG9yOiAnI0VGRjNGNicKICAgICAgICAgICAgfQogICAgICAgICAgfSwKICAgICAgICAgIGJvdW5kYXJ5R2FwOiBmYWxzZSwKICAgICAgICAgIGRhdGE6IFtdCiAgICAgICAgfV0sCiAgICAgICAgeUF4aXM6IFt7CiAgICAgICAgICB0eXBlOiAndmFsdWUnLAogICAgICAgICAgbmFtZTogJycsCiAgICAgICAgICBuYW1lVGV4dFN0eWxlOiB7CiAgICAgICAgICAgIGNvbG9yOiAiI0ExQTBBRSIsCiAgICAgICAgICAgIGZvbnRTaXplOiB0aGlzLiRyZW0oMC44KQogICAgICAgICAgfSwKICAgICAgICAgIG1pbjogbnVsbCwKICAgICAgICAgIG1heDogbnVsbCwKICAgICAgICAgIHNwbGl0TnVtYmVyOiA1LAogICAgICAgICAgc3BsaXRMaW5lOiB7CiAgICAgICAgICAgIHNob3c6IHRydWUsCiAgICAgICAgICAgIGxpbmVTdHlsZTogewogICAgICAgICAgICAgIGNvbG9yOiAnI0VGRjNGNicKICAgICAgICAgICAgfQogICAgICAgICAgfSwKICAgICAgICAgIGF4aXNMaW5lOiB7CiAgICAgICAgICAgIHNob3c6IHRydWUsCiAgICAgICAgICAgIGxpbmVTdHlsZTogewogICAgICAgICAgICAgIGNvbG9yOiAnI0VGRjNGNicKICAgICAgICAgICAgfQogICAgICAgICAgfSwKICAgICAgICAgIGF4aXNMYWJlbDogewogICAgICAgICAgICBzaG93OiB0cnVlLAogICAgICAgICAgICBtYXJnaW46IHRoaXMuJHJlbSgwLjgpLAogICAgICAgICAgICB0ZXh0U3R5bGU6IHsKICAgICAgICAgICAgICBjb2xvcjogJyNBMUEwQUUnLAogICAgICAgICAgICAgIGZvbnRTaXplOiB0aGlzLiRyZW0oMC43KQogICAgICAgICAgICB9CiAgICAgICAgICB9LAogICAgICAgICAgYXhpc1RpY2s6IHsKICAgICAgICAgICAgc2hvdzogZmFsc2UKICAgICAgICAgIH0KICAgICAgICB9XSwKICAgICAgICBzZXJpZXM6IFtdCiAgICAgIH0KICAgIH07CiAgfSwKICBtZXRob2RzOiB7CiAgICAvL+WinuWKoOiuvuWkh+mAieaLqeWZqAogICAgYWRkOiBmdW5jdGlvbiBhZGQoKSB7CiAgICAgIGlmICh0aGlzLnNlbGVjdC5sZW5ndGggPj0gNSkgewogICAgICAgIGFsZXJ0KCfmnIDlpJrlj6rog73pgInmi6nkupTkuKohJyk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgdGhpcy5zZWxlY3QucHVzaCh7CiAgICAgICAgICBpbmRleDogdGhpcy5zZWxlY3QubGVuZ3RoICsgMSwKICAgICAgICAgIGRldmljZUlkOiAnJwogICAgICAgIH0pOwogICAgICB9CiAgICB9LAogICAgLy/lh4/lsJHorr7lpIfpgInmi6nlmagKICAgIHN1YjogZnVuY3Rpb24gc3ViKCkgewogICAgICBpZiAodGhpcy5zZWxlY3QubGVuZ3RoIDw9IDEpIHsKICAgICAgICBhbGVydCgn5pyA5bCR5L+d55WZ5LiA5LiqIScpOwogICAgICB9IGVsc2UgewogICAgICAgIHRoaXMuc2VsZWN0LnBvcCgpOwogICAgICB9CiAgICB9LAogICAgZ2V0RGF0YTogZnVuY3Rpb24gZ2V0RGF0YSgpIHsKICAgICAgZ2V0U2Vuc29yRGF0YSh0aGlzKTsKICAgIH0sCiAgICByZXNpemVIYW5kbGU6IGZ1bmN0aW9uIHJlc2l6ZUhhbmRsZSgpIHsKICAgICAgdmFyIG15Q2hhcnQxID0gdGhpcy4kZWNoYXJ0cy5pbml0KGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdkYXRhLWNoYXJ0JykpOwogICAgICBteUNoYXJ0MS5yZXNpemUoKTsKICAgIH0sCiAgICBhZGRTZXJpZXM6IGZ1bmN0aW9uIGFkZFNlcmllcyhjaGFydERhdGEpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIHZhciBjb2xvckxpc3QgPSBbJyM1NEQ4RkYnLCAncmVkJywgJ29yYW5nZScsICdwaW5rJywgJyM5MjcyQTMnXTsKICAgICAgdGhpcy5jaGFydE9wdGlvbi5zZXJpZXMgPSBbXTsKCiAgICAgIHZhciBfbG9vcCA9IGZ1bmN0aW9uIF9sb29wKGkpIHsKICAgICAgICB2YXIgX2RhdGEgPSBbXSwKICAgICAgICAgICAgX2RhdGUgPSBbXTsKICAgICAgICBjaGFydERhdGFbaV0uZGF0YS5mb3JFYWNoKGZ1bmN0aW9uIChpdGVtKSB7CiAgICAgICAgICBfZGF0YS5wdXNoKGl0ZW0udmFsdWUpOwoKICAgICAgICAgIF9kYXRlLnB1c2goaXRlbS5UaW1lLm1vbnRoICsgJy4nICsgaXRlbS5UaW1lLmRheSk7CiAgICAgICAgfSk7CgogICAgICAgIF90aGlzLmNoYXJ0T3B0aW9uLnNlcmllcy5wdXNoKHsKICAgICAgICAgIG5hbWU6IGNoYXJ0RGF0YVtpXS5kZXZpY2VJZCwKICAgICAgICAgIHR5cGU6ICdsaW5lJywKICAgICAgICAgIHNtb290aDogdHJ1ZSwKICAgICAgICAgIC8v5piv5ZCm5bmz5ruRCiAgICAgICAgICBzaG93QWxsU3ltYm9sOiB0cnVlLAogICAgICAgICAgc3ltYm9sOiAnY2lyY2xlJywKICAgICAgICAgIHNob3dTeW1ib2w6IGZhbHNlLAogICAgICAgICAgc3ltYm9sU2l6ZTogX3RoaXMuJHJlbSgwLjEpLAogICAgICAgICAgbGluZVN0eWxlOiB7CiAgICAgICAgICAgIG5vcm1hbDogewogICAgICAgICAgICAgIGNvbG9yOiBjb2xvckxpc3RbaV0sCiAgICAgICAgICAgICAgc2hhZG93Q29sb3I6IGNvbG9yTGlzdFtpXSwKICAgICAgICAgICAgICBzaGFkb3dCbHVyOiAwLAogICAgICAgICAgICAgIHNoYWRvd09mZnNldFk6IDAsCiAgICAgICAgICAgICAgc2hhZG93T2Zmc2V0WDogMCwKICAgICAgICAgICAgICB3aWR0aDogX3RoaXMuJHJlbSgwLjEyKQogICAgICAgICAgICB9CiAgICAgICAgICB9LAogICAgICAgICAgbGFiZWw6IHsKICAgICAgICAgICAgc2hvdzogdHJ1ZSwKICAgICAgICAgICAgcG9zaXRpb246ICd0b3AnLAogICAgICAgICAgICB0ZXh0U3R5bGU6IHsKICAgICAgICAgICAgICBjb2xvcjogY29sb3JMaXN0W2ldLAogICAgICAgICAgICAgIGZvbnRTaXplOiBfdGhpcy4kcmVtKDAuNykKICAgICAgICAgICAgfQogICAgICAgICAgfSwKICAgICAgICAgIGl0ZW1TdHlsZTogewogICAgICAgICAgICBjb2xvcjogY29sb3JMaXN0W2ldCiAgICAgICAgICB9LAogICAgICAgICAgdG9vbHRpcDogewogICAgICAgICAgICBzaG93OiB0cnVlCiAgICAgICAgICB9LAogICAgICAgICAgZGF0YTogX2RhdGEKICAgICAgICB9KTsKCiAgICAgICAgX3RoaXMuY2hhcnRPcHRpb24ueEF4aXNbMF0uZGF0YSA9IF9kYXRlOwogICAgICB9OwoKICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBjaGFydERhdGEubGVuZ3RoOyBpKyspIHsKICAgICAgICBfbG9vcChpKTsKICAgICAgfQogICAgfQogIH0sCiAgd2F0Y2g6IHsKICAgIC8v55uR5ZCs5Lyg5oSf5Zmo57G75Z6L5bm25Y+K5pe256aB5q2i6YCJ5oup5peg5q2k5Lyg5oSf5Zmo55qE6K6+5aSHCiAgICBzZW5zb3JUeXBlOiB7CiAgICAgIGhhbmRsZXI6IGZ1bmN0aW9uIGhhbmRsZXIobmV3VmFsdWUpIHsKICAgICAgICBjb25zb2xlLmxvZyh0aGlzLmRhdGVWYWx1ZSk7CgogICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy5kZXZpY2VMaXN0Lmxlbmd0aDsgaSsrKSB7CiAgICAgICAgICBpZiAodGhpcy5kZXZpY2VMaXN0W2ldLnNlbnNvckxpc3QuaW5jbHVkZXMobmV3VmFsdWUpKSB7CiAgICAgICAgICAgIHRoaXMuZGV2aWNlTGlzdFtpXS5kaXNhYmxlZCA9IGZhbHNlOwogICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgdGhpcy5kZXZpY2VMaXN0W2ldLmRpc2FibGVkID0gdHJ1ZTsKICAgICAgICAgIH0KICAgICAgICB9CgogICAgICAgIGlmIChuZXdWYWx1ZSA9PSAn5rip5bqmJykgewogICAgICAgICAgdGhpcy5jaGFydE9wdGlvbi55QXhpc1swXS5uYW1lID0gJ+a4qeW6pi8g4oSDJzsKICAgICAgICAgIHRoaXMuY2hhcnRPcHRpb24ueUF4aXNbMF0ubWluID0gMDsKICAgICAgICAgIHRoaXMuY2hhcnRPcHRpb24ueUF4aXNbMF0ubWF4ID0gNTA7CiAgICAgICAgICB0aGlzLmNoYXJ0T3B0aW9uLnlBeGlzWzBdLnNwbGl0TnVtYmVyID0gNTsKICAgICAgICAgIHRoaXMuY2hhcnRPcHRpb24udG9vbHRpcC5mb3JtYXR0ZXIgPSAne2J9PGJyIC8+e2F9OiB7Y30g4oSDJzsKICAgICAgICB9IGVsc2UgaWYgKG5ld1ZhbHVlID09ICfmub/luqYnKSB7CiAgICAgICAgICB0aGlzLmNoYXJ0T3B0aW9uLnlBeGlzWzBdLm5hbWUgPSAn5rm/5bqmLyAlJzsKICAgICAgICAgIHRoaXMuY2hhcnRPcHRpb24ueUF4aXNbMF0ubWluID0gMDsKICAgICAgICAgIHRoaXMuY2hhcnRPcHRpb24ueUF4aXNbMF0ubWF4ID0gMTAwOwogICAgICAgICAgdGhpcy5jaGFydE9wdGlvbi55QXhpc1swXS5zcGxpdE51bWJlciA9IDU7CiAgICAgICAgICB0aGlzLmNoYXJ0T3B0aW9uLnRvb2x0aXAuZm9ybWF0dGVyID0gJ3tifTxiciAvPnthfToge2N9ICUnOwogICAgICAgIH0gZWxzZSBpZiAobmV3VmFsdWUgPT0gJ+WFieeFpycpIHsKICAgICAgICAgIHRoaXMuY2hhcnRPcHRpb24ueUF4aXNbMF0ubmFtZSA9ICflhYnnhacvIEx1eCc7CiAgICAgICAgICB0aGlzLmNoYXJ0T3B0aW9uLnlBeGlzWzBdLm1pbiA9IDA7CiAgICAgICAgICB0aGlzLmNoYXJ0T3B0aW9uLnlBeGlzWzBdLm1heCA9IDEwMDAwOwogICAgICAgICAgdGhpcy5jaGFydE9wdGlvbi55QXhpc1swXS5zcGxpdE51bWJlciA9IDU7CiAgICAgICAgICB0aGlzLmNoYXJ0T3B0aW9uLnRvb2x0aXAuZm9ybWF0dGVyID0gJ3tifTxiciAvPnthfToge2N9IEx1eCc7CiAgICAgICAgfQogICAgICB9LAogICAgICBpbW1lZGlhdGU6IHRydWUKICAgIH0sCiAgICBkYXRlVmFsdWU6IHsKICAgICAgaGFuZGxlcjogZnVuY3Rpb24gaGFuZGxlcihuZXdWYWx1ZSkgewogICAgICAgIHZhciBzdGFydCA9IG5ld1ZhbHVlWzBdLnNwbGl0KCctJyk7CiAgICAgICAgdmFyIGVuZCA9IG5ld1ZhbHVlWzFdLnNwbGl0KCctJyk7CiAgICAgICAgdGhpcy5zdGFydFRpbWUueWVhciA9IHN0YXJ0WzBdOwogICAgICAgIHRoaXMuc3RhcnRUaW1lLm1vbnRoID0gc3RhcnRbMV07CiAgICAgICAgdGhpcy5zdGFydFRpbWUuZGF5ID0gc3RhcnRbMl07CiAgICAgICAgdGhpcy5lbmRUaW1lLnllYXIgPSBlbmRbMF07CiAgICAgICAgdGhpcy5lbmRUaW1lLm1vbnRoID0gZW5kWzFdOwogICAgICAgIHRoaXMuZW5kVGltZS5kYXkgPSBlbmRbMl07CiAgICAgIH0sCiAgICAgIGltbWVkaWF0ZTogdHJ1ZSwKICAgICAgZGVlcDogdHJ1ZQogICAgfQogIH0sCiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHsKICAgIC8v6aG16Z2i5oyC6L295Y2z6K+35rGC6K6+5aSH5YiX6KGo5pWw5o2uCiAgICBnZXREZXZpY2VMaXN0KHRoaXMpOwogICAgdmFyIHJlc2l6ZUV2dDEgPSAnb3JpZW50YXRpb25jaGFuZ2UnIGluIHdpbmRvdyA/ICdvcmllbnRhdGlvbmNoYW5nZScgOiAncmVzaXplJzsKICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKHJlc2l6ZUV2dDEsIHRoaXMucmVzaXplSGFuZGxlLCBmYWxzZSk7CiAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdET01Db250ZW50TG9hZGVkJywgdGhpcy5yZXNpemVIYW5kbGUsIGZhbHNlKTsKICB9Cn07"},{"version":3,"sources":["index.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <div class=\"top-view\">\n      <div class=\"selector-container\">\n        <div class=\"group-selector\" v-for=\"group in select\" :key=\"group.index\">\n          <div class=\"selector\">\n            <div class=\"index\">{{ group.index }}</div>\n            <div class=\"selector-tittle\">传感器类型：</div>\n            <el-select\n                class=\"picker\"\n                v-model=\"sensorType\">\n              <el-option\n                  class=\"picker\"\n                  v-for=\"item in sensorList\"\n                  :key=\"item.index\"\n                  :value=\"item\">\n              </el-option>\n            </el-select>\n          </div>\n          <div class=\"selector\">\n            <div class=\"selector-tittle\">设备节点：</div>\n            <el-select\n                class=\"picker\"\n                v-model=\"group.deviceId\">\n              <el-option\n                  class=\"picker\"\n                  v-for=\"item in deviceList\"\n                  :key=\"item.index\"\n                  :value=\"item.deviceID\"\n                  :disabled=\"item.disabled\">\n              </el-option>\n            </el-select>\n          </div>\n          <div class=\"selector\">\n            <div class=\"selector-tittle\">时间范围：</div>\n            <el-date-picker\n                class=\"date-picker\"\n                v-model=\"dateValue\"\n                type=\"daterange\"\n                align=\"right\"\n                unlink-panels\n                range-separator=\"至\"\n                start-placeholder=\"开始日期\"\n                end-placeholder=\"结束日期\"\n                value-format=\"yyyy-MM-dd\"\n                :picker-options=\"datePickerOptions\"\n            >\n            </el-date-picker>\n          </div>\n        </div>\n      </div>\n      <button class=\"query\" @click=\"getData\">查询</button>\n      <button class=\"add\" @click=\"add\">+</button>\n      <button class=\"add\" @click=\"sub\">-</button>\n    </div>\n    <div class=\"bottom-view\">\n      <v-chart id=\"data-chart\" :options=\"chartOption\"/>\n    </div>\n  </div>\n</template>\n\n<script>\nimport {getDeviceList, getSensorData} from '../../../api/request'\n\nexport default {\n  name: \"index\",\n  data() {\n    return {\n      //设备列表 待请求数据赋值\n      //数据结构：\n      // {\n      //   deviceID: '123',\n      //   sensorList: ['温度', '湿度', '光照'],\n      //   disabled: false\n      // }\n      deviceList: [],\n      //选择的设备\n      select: [\n        {\n          index: 1,\n          deviceId: '',\n        }\n      ],\n      //可选择的传感器类型\n      sensorList: ['温度', '湿度', '光照'],\n      //选择的传感器类型\n      sensorType: '',\n      //日期挂载变量\n      dateValue: '',\n      startTime: {\n        year: '',\n        month: '',\n        day: ''\n      },\n      endTime: {\n        year: '',\n        month: '',\n        day: ''\n      },\n      //日期选择器配置项\n      datePickerOptions: {\n        shortcuts: [{\n          text: '最近一周',\n          onClick(picker) {\n            const end = new Date();\n            const start = new Date();\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 7);\n            picker.$emit('pick', [start, end]);\n          }\n        }, {\n          text: '最近一个月',\n          onClick(picker) {\n            const end = new Date();\n            const start = new Date();\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 30);\n            picker.$emit('pick', [start, end]);\n          }\n        }, {\n          text: '最近三个月',\n          onClick(picker) {\n            const end = new Date();\n            const start = new Date();\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 90);\n            picker.$emit('pick', [start, end]);\n          }\n        }]\n      },\n      //数据图表配置项\n      chartOption: {\n        title: {\n          text: '',\n          textStyle: {\n            align: 'center',\n            color: '#54D8FF',\n            fontSize: this.$rem(1),\n            fontWeight: this.$rem(25)\n          },\n          top: '0%',\n          left: 'center',\n        },\n        legend: {\n          icon: 'circle',\n          top: '5%',\n          right: '10%',\n          itemWidth: 6,\n          itemGap: 20,\n          textStyle: {\n            fontSize: this.$rem(0.8),\n            color: '#556677'\n          }\n        },\n        tooltip: {\n          trigger: 'axis',\n          formatter: '{b}<br />{a}: {c} ℃',\n          axisPointer: {\n            lineStyle: {\n              color: \"#54D8FF\"\n            },\n          },\n        },\n        grid: {\n          top: '15%',\n          left: '5%',\n          right: '9%',\n          bottom: '15%',\n          containLabel: true\n        },\n        xAxis: [{\n          type: 'category',\n          name: '日期',\n          splitNumber: 8,\n          nameTextStyle: {\n            color: '#A1A0AE',\n            fontSize: this.$rem(0.7),\n            grid: {\n              x: this.$rem(1)\n            }\n          },\n          axisLine: {\n            show: true,\n            lineStyle: {\n              color: '#EFF3F6',\n            }\n          },\n          splitArea: {\n            color: '#f00',\n            lineStyle: {\n              color: '#f00'\n            },\n          },\n          axisTick: {\n            show: false\n          },\n          axisLabel: {\n            lineStyle: {\n              color: '#EFF3F6',\n            },\n            textStyle: {\n              color: '#A1A0AE',\n              fontSize: this.$rem(0.7)\n            }\n          },\n          splitLine: {\n            show: true,\n            lineStyle: {\n              color: '#EFF3F6'\n            }\n          },\n          boundaryGap: false,\n          data: [],\n\n        }],\n\n        yAxis: [{\n          type: 'value',\n          name: '',\n          nameTextStyle: {\n            color: \"#A1A0AE\",\n            fontSize: this.$rem(0.8)\n          },\n          min: null,\n          max: null,\n          splitNumber: 5,\n          splitLine: {\n            show: true,\n            lineStyle: {\n              color: '#EFF3F6'\n            }\n          },\n          axisLine: {\n            show: true,\n            lineStyle: {\n              color: '#EFF3F6'\n            }\n          },\n          axisLabel: {\n            show: true,\n            margin: this.$rem(0.8),\n            textStyle: {\n              color: '#A1A0AE',\n              fontSize: this.$rem(0.7)\n            }\n          },\n          axisTick: {\n            show: false,\n          },\n        },],\n        series: []\n      }\n    }\n  },\n  methods: {\n    //增加设备选择器\n    add() {\n      if (this.select.length >= 5) {\n        alert('最多只能选择五个!')\n      } else {\n        this.select.push({index: this.select.length + 1, deviceId: ''})\n      }\n    },\n    //减少设备选择器\n    sub() {\n      if (this.select.length <= 1) {\n        alert('最少保留一个!')\n      } else {\n        this.select.pop()\n      }\n    },\n    getData() {\n      getSensorData(this)\n    },\n    resizeHandle() {\n      let myChart1 = this.$echarts.init(document.getElementById('data-chart'))\n      myChart1.resize()\n    },\n    addSeries(chartData) {\n      let colorList = ['#54D8FF', 'red', 'orange', 'pink', '#9272A3']\n      this.chartOption.series = []\n      for (let i = 0; i < chartData.length; i++) {\n        let _data = [],\n            _date = []\n        chartData[i].data.forEach((item) => {\n          _data.push(item.value)\n          _date.push(item.Time.month + '.' + item.Time.day)\n        })\n        this.chartOption.series.push(\n            {\n              name: chartData[i].deviceId,\n              type: 'line',\n              smooth: true, //是否平滑\n              showAllSymbol: true,\n              symbol: 'circle',\n              showSymbol: false,\n              symbolSize: this.$rem(0.1),\n              lineStyle: {\n                normal: {\n                  color: colorList[i],\n                  shadowColor: colorList[i],\n                  shadowBlur: 0,\n                  shadowOffsetY: 0,\n                  shadowOffsetX: 0,\n                  width: this.$rem(0.12)\n                },\n              },\n              label: {\n                show: true,\n                position: 'top',\n                textStyle: {\n                  color: colorList[i],\n                  fontSize: this.$rem(0.7)\n                }\n              },\n\n              itemStyle: {\n                color: colorList[i],\n              },\n              tooltip: {\n                show: true,\n              },\n              data: _data\n            }\n        )\n        this.chartOption.xAxis[0].data = _date\n      }\n    }\n  },\n  watch: {\n    //监听传感器类型并及时禁止选择无此传感器的设备\n    sensorType: {\n      handler(newValue) {\n        console.log(this.dateValue)\n        for (let i = 0; i < this.deviceList.length; i++) {\n          if (this.deviceList[i].sensorList.includes(newValue)) {\n            this.deviceList[i].disabled = false\n          } else {\n            this.deviceList[i].disabled = true\n          }\n        }\n        if (newValue == '温度') {\n          this.chartOption.yAxis[0].name = '温度/ ℃'\n          this.chartOption.yAxis[0].min = 0\n          this.chartOption.yAxis[0].max = 50\n          this.chartOption.yAxis[0].splitNumber = 5\n          this.chartOption.tooltip.formatter = '{b}<br />{a}: {c} ℃'\n        } else if (newValue == '湿度') {\n          this.chartOption.yAxis[0].name = '湿度/ %'\n          this.chartOption.yAxis[0].min = 0\n          this.chartOption.yAxis[0].max = 100\n          this.chartOption.yAxis[0].splitNumber = 5\n          this.chartOption.tooltip.formatter = '{b}<br />{a}: {c} %'\n        } else if (newValue == '光照') {\n          this.chartOption.yAxis[0].name = '光照/ Lux'\n          this.chartOption.yAxis[0].min = 0\n          this.chartOption.yAxis[0].max = 10000\n          this.chartOption.yAxis[0].splitNumber = 5\n          this.chartOption.tooltip.formatter = '{b}<br />{a}: {c} Lux'\n        }\n      },\n      immediate: true\n    },\n    dateValue: {\n      handler(newValue) {\n\n        let start = newValue[0].split('-')\n        let end = newValue[1].split('-')\n\n        this.startTime.year = start[0]\n        this.startTime.month = start[1]\n        this.startTime.day = start[2]\n\n        this.endTime.year = end[0]\n        this.endTime.month = end[1]\n        this.endTime.day = end[2]\n\n      },\n      immediate: true,\n      deep: true\n    }\n  },\n  mounted() {\n    //页面挂载即请求设备列表数据\n    getDeviceList(this)\n    var resizeEvt1 = 'orientationchange' in window ? 'orientationchange' : 'resize'\n    window.addEventListener(resizeEvt1, this.resizeHandle, false);\n    document.addEventListener('DOMContentLoaded', this.resizeHandle, false);\n\n  }\n}\n</script>\n\n<style lang=\"less\" scoped>\n.top-view {\n  display: flex;\n  flex-direction: row;\n}\n\n.selector-container {\n  display: flex;\n  flex-direction: column;\n  margin: 0 0 0 2rem;\n}\n\n.group-selector {\n  display: flex;\n  flex-direction: row;\n}\n\n.selector {\n  display: flex;\n  flex-direction: row;\n  margin: 2rem 2rem 0 1rem;\n  align-items: center;\n}\n\n.selector-tittle {\n  margin: 0 0 0 0;\n}\n\n.add {\n  border-radius: 100%;\n  background: #1890ff;\n  color: white;\n  width: 2rem;\n  height: 2rem;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 1.5rem;\n  padding: 0;\n  margin: 2rem 1rem 0 0.5rem;\n  border: #1890ff;\n}\n\n.index {\n  border-radius: 100%;\n  background: #1890ff;\n  color: white;\n  width: 1.5rem;\n  height: 1.5rem;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 1rem;\n  padding: 0;\n  margin: 0 1rem 0 0;\n}\n\n#data-chart {\n  height: 36rem;\n  width: 80rem;\n  margin: 0 0 0 1rem;\n}\n\n.query {\n  height: 2rem;\n  width: 4rem;\n  display: flex;\n  border: none;\n  background: #1890ff;\n  justify-content: center;\n  align-items: center;\n  color: white;\n  font-size: 1.1rem;\n  border-radius: 0.5rem;\n  margin: 2rem 1rem 0 0;\n}\n\n.picker {\n  width: 10rem;\n}\n\n.date-picker {\n  .el-input__inner {\n    width: 5rem;\n    height: 2rem;\n  }\n}\n</style>"],"sourceRoot":"src/components/DataAnalysis/SensingData"}]}