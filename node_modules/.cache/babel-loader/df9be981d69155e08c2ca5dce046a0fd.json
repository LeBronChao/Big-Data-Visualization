{"remainingRequest":"/Users/lebronchao/Desktop/Web开发项目/Big_Data_Visualization/node_modules/babel-loader/lib/index.js!/Users/lebronchao/Desktop/Web开发项目/Big_Data_Visualization/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/lebronchao/Desktop/Web开发项目/Big_Data_Visualization/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/lebronchao/Desktop/Web开发项目/Big_Data_Visualization/src/components/DataAnalysis/SensingData/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/lebronchao/Desktop/Web开发项目/Big_Data_Visualization/src/components/DataAnalysis/SensingData/index.vue","mtime":1597760225712},{"path":"/Users/lebronchao/Desktop/Web开发项目/Big_Data_Visualization/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lebronchao/Desktop/Web开发项目/Big_Data_Visualization/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/lebronchao/Desktop/Web开发项目/Big_Data_Visualization/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lebronchao/Desktop/Web开发项目/Big_Data_Visualization/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["index.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <div class=\"top-view\">\n      <div class=\"selector-container\">\n        <div class=\"group-selector\" v-for=\"group in select\" :key=\"group.index\">\n          <div class=\"selector\">\n            <div class=\"index\">{{ group.index }}</div>\n            <div class=\"selector-tittle\">传感器类型：</div>\n            <a-select\n                class=\"picker\"\n                v-model=\"sensorType\"\n                dropdownClassName=\"picker\"\n            >\n              <a-select-option\n                  class=\"picker\"\n                  v-for=\"item in sensorList\"\n                  :key=\"item.index\"\n                  :value=\"item\"\n              >{{item}}\n              </a-select-option>\n            </a-select>\n          </div>\n          <div class=\"selector\">\n            <div class=\"selector-tittle\">设备节点：</div>\n            <a-select\n                class=\"picker\"\n                v-model=\"group.device\"\n                dropdownClassName=\"picker\"\n            >\n              <a-select-option\n                  class=\"picker\"\n                  v-for=\"item in deviceList\"\n                  :key=\"item.device\"\n                  :value=\"item.device\"\n                  :disabled=\"item.disabled\"\n              >{{item.device}}\n              </a-select-option>\n            </a-select>\n          </div>\n          <div class=\"selector\">\n            <div class=\"selector-tittle\">时间范围：</div>\n            <el-date-picker\n                class=\"date-picker\"\n                v-model=\"dateValue\"\n                type=\"daterange\"\n                align=\"right\"\n                unlink-panels\n                range-separator=\"至\"\n                start-placeholder=\"开始日期\"\n                end-placeholder=\"结束日期\"\n                :picker-options=\"datePickerOptions\">\n            </el-date-picker>\n          </div>\n        </div>\n      </div>\n      <button class=\"query\" @click=\"getData\">查询</button>\n      <button class=\"add\" @click=\"add\">+</button>\n      <button class=\"add\" @click=\"sub\">-</button>\n    </div>\n    <div class=\"bottom-view\">\n      <v-chart class=\"data-chart\" :options=\"chartOption\"/>\n    </div>\n  </div>\n</template>\n\n<script>\n\nimport {getDeviceList, getSensorData} from '../../../api/request'\n\nexport default {\n  name: \"index\",\n  data() {\n    return {\n      //设备列表 待请求数据赋值\n      //数据结构：\n      // {\n      //   device: '123',\n      //       sensorList: ['温度', '湿度', '光照'],\n      //     disabled: false\n      // }\n      deviceList: [],\n      //选择的设备\n      select: [\n        {\n          index: 1,\n          deviceId: '',\n        }\n      ],\n      //可选择的传感器类型\n      sensorList: ['温度', '湿度', '光照'],\n      //选择的传感器类型\n      sensorType: '',\n      //日期挂载变量\n      dateValue: '',\n      //日期选择器配置项\n      datePickerOptions: {\n        shortcuts: [{\n          text: '最近一周',\n          onClick(picker) {\n            const end = new Date();\n            const start = new Date();\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 7);\n            picker.$emit('pick', [start, end]);\n          }\n        }, {\n          text: '最近一个月',\n          onClick(picker) {\n            const end = new Date();\n            const start = new Date();\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 30);\n            picker.$emit('pick', [start, end]);\n          }\n        }, {\n          text: '最近三个月',\n          onClick(picker) {\n            const end = new Date();\n            const start = new Date();\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 90);\n            picker.$emit('pick', [start, end]);\n          }\n        }]\n      },\n      //数据图表配置项\n      chartOption: {\n        title: {\n          text: '',\n          textStyle: {\n            align: 'center',\n            color: '#0872ea',\n            fontSize: this.$rem(1),\n            fontWeight: this.$rem(25)\n          },\n          top: '0%',\n          left: 'center',\n        },\n        legend: {\n          icon: 'circle',\n          top: '5%',\n          right: '10%',\n          itemWidth: 6,\n          itemGap: 20,\n          textStyle: {\n            fontSize: this.$rem(0.8),\n            color: '#556677'\n          }\n        },\n        tooltip: {\n          trigger: 'axis',\n          formatter: '{b}<br />{a}: {c}℃',\n          axisPointer: {\n            lineStyle: {\n              color: {\n                type: 'linear',\n                x: 0,\n                y: 0,\n                x2: 0,\n                y2: 1,\n                colorStops: [{\n                  offset: 0,\n                  color: 'rgba(0, 255, 233,0)'\n                }, {\n                  offset: 0.5,\n                  color: 'rgba(255, 255, 255,1)',\n                }, {\n                  offset: 1,\n                  color: 'rgba(0, 255, 233,0)'\n                }],\n                global: false\n              }\n            },\n          },\n        },\n        grid: {\n          top: '15%',\n          left: '5%',\n          right: '9%',\n          bottom: '15%',\n          containLabel: true\n        },\n        xAxis: [{\n          type: 'category',\n          name: '日期',\n          splitNumber: 8,\n          nameTextStyle: {\n            color: '#0872ea',\n            fontSize: this.$rem(0.7)\n          },\n          axisLine: {\n            show: true,\n            lineStyle: {\n              color: '#0872ea'\n            }\n          },\n          splitArea: {\n            // show: true,\n            color: 'black',\n            lineStyle: {\n              color: '#f00'\n            },\n          },\n          axisLabel: {\n            color: '#0872ea',\n            textStyle: {\n              color: '#0872ea',\n              fontSize: this.$rem(0.7)\n            },\n          },\n          splitLine: {\n            show: false\n          },\n          boundaryGap: false,\n          data: [],\n\n        }],\n\n        yAxis: [{\n          type: 'value',\n          name: '',\n          nameTextStyle: {\n            color: '#0872ea',\n            fontSize: this.$rem(0.7)\n          },\n          min: null,\n          max: null,\n          splitNumber: 5,\n          splitLine: {\n            show: true,\n            lineStyle: {\n              color: 'rgba(255,255,255,0.1)'\n            }\n          },\n          axisLine: {\n            show: true,\n            lineStyle: {\n              color: '#0872ea',\n            }\n          },\n          axisLabel: {\n            show: true,\n            margin: this.$rem(0.8),\n            textStyle: {\n              color: '#0872ea',\n              fontSize: this.$rem(0.7)\n            },\n          },\n          axisTick: {\n            show: true,\n          },\n        },],\n        series: []\n      }\n    }\n  },\n  methods: {\n    //增加设备选择器\n    add() {\n      if (this.select.length >= 5) {\n        alert('最多只能选择五个!')\n      } else {\n        this.select.push({index: this.select.length + 1, deviceId: ''})\n      }\n    },\n    //减少设备选择器\n    sub() {\n      if (this.select.length <= 1) {\n        alert('最少保留一个!')\n      } else {\n        this.select.pop()\n      }\n    },\n    getData() {\n      getSensorData(this)\n    },\n    checkSensor(newValue){\n      for (let i = 0; i < this.deviceList.length; i++) {\n        if (this.deviceList[i].sensorList.includes(newValue)) {\n          this.deviceList[i].disabled = false\n        } else {\n          this.deviceList[i].disabled = true\n        }\n      }\n      if (newValue == '温度') {\n        this.chartOption.yAxis[0].name = '温度/ ℃'\n        this.chartOption.yAxis[0].min = 0\n        this.chartOption.yAxis[0].max = 50\n        this.chartOption.yAxis[0].splitNumber = 5\n      } else if (newValue == '湿度') {\n        this.chartOption.yAxis[0].name = '湿度/ %'\n        this.chartOption.yAxis[0].min = 0\n        this.chartOption.yAxis[0].max = 100\n        this.chartOption.yAxis[0].splitNumber = 5\n      } else if (newValue == '光照') {\n        this.chartOption.yAxis[0].name = '光照/ Lux'\n        this.chartOption.yAxis[0].min = 0\n        this.chartOption.yAxis[0].max = 10000\n        this.chartOption.yAxis[0].splitNumber = 5\n      }\n    }\n  },\n  watch: {\n    //监听传感器类型并及时禁止选择无此传感器的设备\n    sensorType: {\n      handler(newValue) {\n        this.checkSensor(newValue)\n      },\n      immediate: true\n    }\n  },\n  mounted() {\n    //页面挂载即请求设备列表数据\n    getDeviceList(this)\n  }\n}\n</script>\n\n<style lang=\"less\" scoped>\n.top-view {\n  display: flex;\n  flex-direction: row;\n}\n\n.selector-container {\n  display: flex;\n  flex-direction: column;\n  margin: 0 0 0 4rem;\n}\n\n.group-selector {\n  display: flex;\n  flex-direction: row;\n}\n\n.selector {\n  display: flex;\n  flex-direction: row;\n  margin: 2rem 3rem 0 1rem;\n  align-items: center;\n}\n\n.selector-tittle {\n  margin: 0 1rem 0 0;\n}\n\n.add {\n  border-radius: 100%;\n  background: #1890ff;\n  color: white;\n  width: 2rem;\n  height: 2rem;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 1.5rem;\n  padding: 0;\n  margin: 2rem 1rem 0 0.5rem;\n  border: #1890ff;\n}\n\n.index {\n  border-radius: 100%;\n  background: #1890ff;\n  color: white;\n  width: 1.5rem;\n  height: 1.5rem;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 1rem;\n  padding: 0;\n  margin: 0 1rem 0 0;\n}\n\n.data-chart {\n  height: 36rem;\n  width: 88rem;\n  margin: 0 0 0 0rem;\n}\n\n.query {\n  height: 2rem;\n  width: 4rem;\n  display: flex;\n  border: none;\n  background: #1890ff;\n  justify-content: center;\n  align-items: center;\n  color: white;\n  font-size: 1.1rem;\n  border-radius: 0.5rem;\n  margin: 2rem 1rem 0 0;\n}\n\n.picker {\n  width: 8rem;\n  margin-top: 0.5rem;\n}\n\n</style>"],"sourceRoot":"src/components/DataAnalysis/SensingData"}]}