{"remainingRequest":"/Users/lebronchao/Desktop/Web Project/Big_Data_Visualization/node_modules/thread-loader/dist/cjs.js!/Users/lebronchao/Desktop/Web Project/Big_Data_Visualization/node_modules/babel-loader/lib/index.js!/Users/lebronchao/Desktop/Web Project/Big_Data_Visualization/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/lebronchao/Desktop/Web Project/Big_Data_Visualization/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/lebronchao/Desktop/Web Project/Big_Data_Visualization/src/components/DataAnalysis/SensingData/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/lebronchao/Desktop/Web Project/Big_Data_Visualization/src/components/DataAnalysis/SensingData/index.vue","mtime":1598943605088},{"path":"/Users/lebronchao/Desktop/Web Project/Big_Data_Visualization/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lebronchao/Desktop/Web Project/Big_Data_Visualization/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lebronchao/Desktop/Web Project/Big_Data_Visualization/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/lebronchao/Desktop/Web Project/Big_Data_Visualization/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lebronchao/Desktop/Web Project/Big_Data_Visualization/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZm9yLWVhY2giOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5pbmNsdWRlcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmZ1bmN0aW9uLm5hbWUiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAuZXhlYyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5pbmNsdWRlcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5zcGxpdCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuZm9yLWVhY2giOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgeyBnZXREZXZpY2VMaXN0LCBnZXRTZW5zb3JEYXRhIH0gZnJvbSAnLi4vLi4vLi4vYXBpL0RhdGFBbmFseXNpcyc7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiaW5kZXgiLAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICAvL+iuvuWkh+WIl+ihqCDlvoXor7fmsYLmlbDmja7otYvlgLwKICAgICAgLy/mlbDmja7nu5PmnoTvvJoKICAgICAgLy8gewogICAgICAvLyAgIGRldmljZUlEOiAnMTIzJywKICAgICAgLy8gICBzZW5zb3JMaXN0OiBbJ+a4qeW6picsICfmub/luqYnLCAn5YWJ54WnJ10sCiAgICAgIC8vICAgZGlzYWJsZWQ6IGZhbHNlCiAgICAgIC8vIH0KICAgICAgZGV2aWNlTGlzdDogW10sCiAgICAgIC8v6YCJ5oup55qE6K6+5aSHCiAgICAgIHNlbGVjdDogW3sKICAgICAgICBpbmRleDogMSwKICAgICAgICBkZXZpY2VJZDogJycKICAgICAgfV0sCiAgICAgIC8v5Y+v6YCJ5oup55qE5Lyg5oSf5Zmo57G75Z6LCiAgICAgIHNlbnNvckxpc3Q6IFsn5rip5bqmJywgJ+a5v+W6picsICflhYnnhacnXSwKICAgICAgLy/pgInmi6nnmoTkvKDmhJ/lmajnsbvlnosKICAgICAgc2Vuc29yVHlwZTogJycsCiAgICAgIC8v5pel5pyf5oyC6L295Y+Y6YePCiAgICAgIGRhdGVWYWx1ZTogJycsCiAgICAgIHN0YXJ0VGltZTogewogICAgICAgIHllYXI6ICcnLAogICAgICAgIG1vbnRoOiAnJywKICAgICAgICBkYXk6ICcnCiAgICAgIH0sCiAgICAgIGVuZFRpbWU6IHsKICAgICAgICB5ZWFyOiAnJywKICAgICAgICBtb250aDogJycsCiAgICAgICAgZGF5OiAnJwogICAgICB9LAogICAgICAvL+aXpeacn+mAieaLqeWZqOmFjee9rumhuQogICAgICBkYXRlUGlja2VyT3B0aW9uczogewogICAgICAgIHNob3J0Y3V0czogW3sKICAgICAgICAgIHRleHQ6ICfmnIDov5HkuIDlkagnLAogICAgICAgICAgb25DbGljazogZnVuY3Rpb24gb25DbGljayhwaWNrZXIpIHsKICAgICAgICAgICAgdmFyIGVuZCA9IG5ldyBEYXRlKCk7CiAgICAgICAgICAgIHZhciBzdGFydCA9IG5ldyBEYXRlKCk7CiAgICAgICAgICAgIHN0YXJ0LnNldFRpbWUoc3RhcnQuZ2V0VGltZSgpIC0gMzYwMCAqIDEwMDAgKiAyNCAqIDcpOwogICAgICAgICAgICBwaWNrZXIuJGVtaXQoJ3BpY2snLCBbc3RhcnQsIGVuZF0pOwogICAgICAgICAgfQogICAgICAgIH0sIHsKICAgICAgICAgIHRleHQ6ICfmnIDov5HkuIDkuKrmnIgnLAogICAgICAgICAgb25DbGljazogZnVuY3Rpb24gb25DbGljayhwaWNrZXIpIHsKICAgICAgICAgICAgdmFyIGVuZCA9IG5ldyBEYXRlKCk7CiAgICAgICAgICAgIHZhciBzdGFydCA9IG5ldyBEYXRlKCk7CiAgICAgICAgICAgIHN0YXJ0LnNldFRpbWUoc3RhcnQuZ2V0VGltZSgpIC0gMzYwMCAqIDEwMDAgKiAyNCAqIDMwKTsKICAgICAgICAgICAgcGlja2VyLiRlbWl0KCdwaWNrJywgW3N0YXJ0LCBlbmRdKTsKICAgICAgICAgIH0KICAgICAgICB9LCB7CiAgICAgICAgICB0ZXh0OiAn5pyA6L+R5LiJ5Liq5pyIJywKICAgICAgICAgIG9uQ2xpY2s6IGZ1bmN0aW9uIG9uQ2xpY2socGlja2VyKSB7CiAgICAgICAgICAgIHZhciBlbmQgPSBuZXcgRGF0ZSgpOwogICAgICAgICAgICB2YXIgc3RhcnQgPSBuZXcgRGF0ZSgpOwogICAgICAgICAgICBzdGFydC5zZXRUaW1lKHN0YXJ0LmdldFRpbWUoKSAtIDM2MDAgKiAxMDAwICogMjQgKiA5MCk7CiAgICAgICAgICAgIHBpY2tlci4kZW1pdCgncGljaycsIFtzdGFydCwgZW5kXSk7CiAgICAgICAgICB9CiAgICAgICAgfV0KICAgICAgfSwKICAgICAgLy/mlbDmja7lm77ooajphY3nva7pobkKICAgICAgY2hhcnRPcHRpb246IHsKICAgICAgICB0aXRsZTogewogICAgICAgICAgdGV4dDogJycsCiAgICAgICAgICB0ZXh0U3R5bGU6IHsKICAgICAgICAgICAgYWxpZ246ICdjZW50ZXInLAogICAgICAgICAgICBjb2xvcjogJyM1NEQ4RkYnLAogICAgICAgICAgICBmb250U2l6ZTogdGhpcy4kcmVtKDEpLAogICAgICAgICAgICBmb250V2VpZ2h0OiB0aGlzLiRyZW0oMjUpCiAgICAgICAgICB9LAogICAgICAgICAgdG9wOiAnMCUnLAogICAgICAgICAgbGVmdDogJ2NlbnRlcicKICAgICAgICB9LAogICAgICAgIGxlZ2VuZDogewogICAgICAgICAgaWNvbjogJ2NpcmNsZScsCiAgICAgICAgICB0b3A6ICc1JScsCiAgICAgICAgICByaWdodDogJzEwJScsCiAgICAgICAgICBpdGVtV2lkdGg6IDYsCiAgICAgICAgICBpdGVtR2FwOiAyMCwKICAgICAgICAgIHRleHRTdHlsZTogewogICAgICAgICAgICBmb250U2l6ZTogdGhpcy4kcmVtKDAuOCksCiAgICAgICAgICAgIGNvbG9yOiAnIzU1NjY3NycKICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgIHRvb2x0aXA6IHsKICAgICAgICAgIHRyaWdnZXI6ICdheGlzJywKICAgICAgICAgIGZvcm1hdHRlcjogJycsCiAgICAgICAgICBheGlzUG9pbnRlcjogewogICAgICAgICAgICBsaW5lU3R5bGU6IHsKICAgICAgICAgICAgICBjb2xvcjogIiM1NEQ4RkYiCiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgIGdyaWQ6IHsKICAgICAgICAgIHRvcDogJzE1JScsCiAgICAgICAgICBsZWZ0OiAnNSUnLAogICAgICAgICAgcmlnaHQ6ICc5JScsCiAgICAgICAgICBib3R0b206ICcxNSUnLAogICAgICAgICAgY29udGFpbkxhYmVsOiB0cnVlCiAgICAgICAgfSwKICAgICAgICB4QXhpczogW3sKICAgICAgICAgIHR5cGU6ICdjYXRlZ29yeScsCiAgICAgICAgICBuYW1lOiAn5pel5pyfJywKICAgICAgICAgIHNwbGl0TnVtYmVyOiA4LAogICAgICAgICAgbmFtZVRleHRTdHlsZTogewogICAgICAgICAgICBjb2xvcjogJyNBMUEwQUUnLAogICAgICAgICAgICBmb250U2l6ZTogdGhpcy4kcmVtKDAuNyksCiAgICAgICAgICAgIGdyaWQ6IHsKICAgICAgICAgICAgICB4OiB0aGlzLiRyZW0oMSkKICAgICAgICAgICAgfQogICAgICAgICAgfSwKICAgICAgICAgIGF4aXNMaW5lOiB7CiAgICAgICAgICAgIHNob3c6IHRydWUsCiAgICAgICAgICAgIGxpbmVTdHlsZTogewogICAgICAgICAgICAgIGNvbG9yOiAnI0VGRjNGNicKICAgICAgICAgICAgfQogICAgICAgICAgfSwKICAgICAgICAgIHNwbGl0QXJlYTogewogICAgICAgICAgICBjb2xvcjogJyNmMDAnLAogICAgICAgICAgICBsaW5lU3R5bGU6IHsKICAgICAgICAgICAgICBjb2xvcjogJyNmMDAnCiAgICAgICAgICAgIH0KICAgICAgICAgIH0sCiAgICAgICAgICBheGlzVGljazogewogICAgICAgICAgICBzaG93OiBmYWxzZQogICAgICAgICAgfSwKICAgICAgICAgIGF4aXNMYWJlbDogewogICAgICAgICAgICBsaW5lU3R5bGU6IHsKICAgICAgICAgICAgICBjb2xvcjogJyNFRkYzRjYnCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIGludGVydmFsOiAwLAogICAgICAgICAgICB0ZXh0U3R5bGU6IHsKICAgICAgICAgICAgICBjb2xvcjogJyNBMUEwQUUnLAogICAgICAgICAgICAgIGZvbnRTaXplOiB0aGlzLiRyZW0oMC43KQogICAgICAgICAgICB9CiAgICAgICAgICB9LAogICAgICAgICAgc3BsaXRMaW5lOiB7CiAgICAgICAgICAgIHNob3c6IHRydWUsCiAgICAgICAgICAgIGxpbmVTdHlsZTogewogICAgICAgICAgICAgIGNvbG9yOiAnI0VGRjNGNicKICAgICAgICAgICAgfQogICAgICAgICAgfSwKICAgICAgICAgIGJvdW5kYXJ5R2FwOiBmYWxzZSwKICAgICAgICAgIGRhdGE6IFtdCiAgICAgICAgfV0sCiAgICAgICAgeUF4aXM6IFt7CiAgICAgICAgICB0eXBlOiAndmFsdWUnLAogICAgICAgICAgbmFtZTogJycsCiAgICAgICAgICBuYW1lVGV4dFN0eWxlOiB7CiAgICAgICAgICAgIGNvbG9yOiAiI0ExQTBBRSIsCiAgICAgICAgICAgIGZvbnRTaXplOiB0aGlzLiRyZW0oMC44KQogICAgICAgICAgfSwKICAgICAgICAgIG1pbjogbnVsbCwKICAgICAgICAgIG1heDogbnVsbCwKICAgICAgICAgIHNwbGl0TnVtYmVyOiA1LAogICAgICAgICAgc3BsaXRMaW5lOiB7CiAgICAgICAgICAgIHNob3c6IHRydWUsCiAgICAgICAgICAgIGxpbmVTdHlsZTogewogICAgICAgICAgICAgIGNvbG9yOiAnI0VGRjNGNicKICAgICAgICAgICAgfQogICAgICAgICAgfSwKICAgICAgICAgIGF4aXNMaW5lOiB7CiAgICAgICAgICAgIHNob3c6IHRydWUsCiAgICAgICAgICAgIGxpbmVTdHlsZTogewogICAgICAgICAgICAgIGNvbG9yOiAnI0VGRjNGNicKICAgICAgICAgICAgfQogICAgICAgICAgfSwKICAgICAgICAgIGF4aXNMYWJlbDogewogICAgICAgICAgICBzaG93OiB0cnVlLAogICAgICAgICAgICBtYXJnaW46IHRoaXMuJHJlbSgwLjgpLAogICAgICAgICAgICB0ZXh0U3R5bGU6IHsKICAgICAgICAgICAgICBjb2xvcjogJyNBMUEwQUUnLAogICAgICAgICAgICAgIGZvbnRTaXplOiB0aGlzLiRyZW0oMC43KQogICAgICAgICAgICB9CiAgICAgICAgICB9LAogICAgICAgICAgYXhpc1RpY2s6IHsKICAgICAgICAgICAgc2hvdzogZmFsc2UKICAgICAgICAgIH0KICAgICAgICB9XSwKICAgICAgICBzZXJpZXM6IFtdCiAgICAgIH0KICAgIH07CiAgfSwKICBtZXRob2RzOiB7CiAgICAvL+WinuWKoOiuvuWkh+mAieaLqeWZqAogICAgYWRkOiBmdW5jdGlvbiBhZGQoKSB7CiAgICAgIGlmICh0aGlzLnNlbGVjdC5sZW5ndGggPj0gNSkgewogICAgICAgIGFsZXJ0KCfmnIDlpJrlj6rog73pgInmi6nkupTkuKohJyk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgdGhpcy5zZWxlY3QucHVzaCh7CiAgICAgICAgICBpbmRleDogdGhpcy5zZWxlY3QubGVuZ3RoICsgMSwKICAgICAgICAgIGRldmljZUlkOiAnJwogICAgICAgIH0pOwogICAgICB9CiAgICB9LAogICAgLy/lh4/lsJHorr7lpIfpgInmi6nlmagKICAgIHN1YjogZnVuY3Rpb24gc3ViKCkgewogICAgICBpZiAodGhpcy5zZWxlY3QubGVuZ3RoIDw9IDEpIHsKICAgICAgICBhbGVydCgn5pyA5bCR5L+d55WZ5LiA5LiqIScpOwogICAgICB9IGVsc2UgewogICAgICAgIHRoaXMuc2VsZWN0LnBvcCgpOwogICAgICB9CgogICAgICB0aGlzLmNoYXJ0T3B0aW9uLnNlcmllcy5wb3AoKTsKICAgIH0sCiAgICAvL+ivt+axguaVsOaNrgogICAgZ2V0RGF0YTogZnVuY3Rpb24gZ2V0RGF0YSgpIHsKICAgICAgZ2V0U2Vuc29yRGF0YSh0aGlzKTsKICAgIH0sCiAgICByZXNpemVIYW5kbGU6IGZ1bmN0aW9uIHJlc2l6ZUhhbmRsZSgpIHsKICAgICAgdmFyIG15Q2hhcnQxID0gdGhpcy4kZWNoYXJ0cy5pbml0KGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdkYXRhLWNoYXJ0JykpOwogICAgICBteUNoYXJ0MS5yZXNpemUoKTsKICAgIH0sCiAgICAvL+WwhuWkmuS4quiuvuWkh+eahOaVsOaNruWKoOWIsOWbvuihqOmHjAogICAgYWRkU2VyaWVzOiBmdW5jdGlvbiBhZGRTZXJpZXMoY2hhcnREYXRhLCBtYXgpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIC8qCiAgICAgICog6aKE5a6a5LiN5ZCM5puy57q/55qE6aKc6ImyCiAgICAgICogZGF0ZSDml6XmnJ/mlbDmja7kuK3ovazlj5jph48KICAgICAgKiBkYXRhIOaVsOaNrumhueS4rei9rOWPmOmHjwogICAgICAqIF9kYXRlIOacgOWkmuaVsOaNrueahOiuvuWkh+eahOaXpeacn+S4rei9rOWPmOmHj++8iOiuvuS4unjovbTvvIkKICAgICAgKiAqLwogICAgICB2YXIgY29sb3JMaXN0ID0gWycjNTREOEZGJywgJ3JlZCcsICdvcmFuZ2UnLCAncGluaycsICcjOTI3MkEzJ10sCiAgICAgICAgICBkYXRlLAogICAgICAgICAgZGF0YSA9IFtdLAogICAgICAgICAgX2RhdGUgPSBbXTsKICAgICAgdGhpcy5jaGFydE9wdGlvbi5zZXJpZXMgPSBbXTsKCiAgICAgIHZhciBfbG9vcCA9IGZ1bmN0aW9uIF9sb29wKGkpIHsKICAgICAgICBkYXRhID0gW107CiAgICAgICAgY2hhcnREYXRhW2ldLmRhdGEuZm9yRWFjaChmdW5jdGlvbiAoaXRlbSkgewogICAgICAgICAgaWYgKGkgPT0gMCkgewogICAgICAgICAgICBfZGF0ZS5wdXNoKCIiLmNvbmNhdChpdGVtLlRpbWUueWVhciwgIi0iKS5jb25jYXQoaXRlbS5UaW1lLm1vbnRoLCAiLSIpLmNvbmNhdChpdGVtLlRpbWUuZGF5LCAiXG4iKS5jb25jYXQoaXRlbS5UaW1lLmhvdXIsICI6IikuY29uY2F0KGl0ZW0uVGltZS5taW51dGUpKTsKICAgICAgICAgIH0KCiAgICAgICAgICBkYXRlID0gIiIuY29uY2F0KGl0ZW0uVGltZS55ZWFyLCAiLSIpLmNvbmNhdChpdGVtLlRpbWUubW9udGgsICItIikuY29uY2F0KGl0ZW0uVGltZS5kYXksICJcbiIpLmNvbmNhdChpdGVtLlRpbWUuaG91ciwgIjoiKS5jb25jYXQoaXRlbS5UaW1lLm1pbnV0ZSk7CiAgICAgICAgICBkYXRhLnB1c2goW2RhdGUsIGl0ZW0udmFsdWVdKTsKICAgICAgICB9KTsKCiAgICAgICAgX3RoaXMuY2hhcnRPcHRpb24uc2VyaWVzLnB1c2goewogICAgICAgICAgbmFtZTogY2hhcnREYXRhW2ldLmRldmljZUlkLAogICAgICAgICAgdHlwZTogJ2xpbmUnLAogICAgICAgICAgc21vb3RoOiB0cnVlLAogICAgICAgICAgLy/mmK/lkKblubPmu5EKICAgICAgICAgIHNob3dBbGxTeW1ib2w6IHRydWUsCiAgICAgICAgICBzeW1ib2w6ICdjaXJjbGUnLAogICAgICAgICAgc2hvd1N5bWJvbDogZmFsc2UsCiAgICAgICAgICBzeW1ib2xTaXplOiBfdGhpcy4kcmVtKDAuMSksCiAgICAgICAgICBsaW5lU3R5bGU6IHsKICAgICAgICAgICAgbm9ybWFsOiB7CiAgICAgICAgICAgICAgY29sb3I6IGNvbG9yTGlzdFtpXSwKICAgICAgICAgICAgICBzaGFkb3dDb2xvcjogY29sb3JMaXN0W2ldLAogICAgICAgICAgICAgIHNoYWRvd0JsdXI6IDAsCiAgICAgICAgICAgICAgc2hhZG93T2Zmc2V0WTogMCwKICAgICAgICAgICAgICBzaGFkb3dPZmZzZXRYOiAwLAogICAgICAgICAgICAgIHdpZHRoOiBfdGhpcy4kcmVtKDAuMTIpCiAgICAgICAgICAgIH0KICAgICAgICAgIH0sCiAgICAgICAgICBsYWJlbDogewogICAgICAgICAgICBzaG93OiB0cnVlLAogICAgICAgICAgICBwb3NpdGlvbjogJ3RvcCcsCiAgICAgICAgICAgIHRleHRTdHlsZTogewogICAgICAgICAgICAgIGNvbG9yOiBjb2xvckxpc3RbaV0sCiAgICAgICAgICAgICAgZm9udFNpemU6IF90aGlzLiRyZW0oMC43KQogICAgICAgICAgICB9CiAgICAgICAgICB9LAogICAgICAgICAgaXRlbVN0eWxlOiB7CiAgICAgICAgICAgIGNvbG9yOiBjb2xvckxpc3RbaV0KICAgICAgICAgIH0sCiAgICAgICAgICB0b29sdGlwOiB7CiAgICAgICAgICAgIHNob3c6IHRydWUKICAgICAgICAgIH0sCiAgICAgICAgICBkYXRhOiBkYXRhCiAgICAgICAgfSk7CiAgICAgIH07CgogICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGNoYXJ0RGF0YS5sZW5ndGg7IGkrKykgewogICAgICAgIF9sb29wKGkpOwogICAgICB9IC8v5aaC5p6c5pWw5o2u6aG55aSa5LqOMTDmnaEgIOWImeiuoeeul+malG7mnaHmmL7npLrkuIDkuKp46L205pWw5o2u6aG5CgoKICAgICAgdmFyIGludGVydmFsID0gcGFyc2VJbnQodGhpcy5jaGFydE9wdGlvbi5zZXJpZXNbMF0uZGF0YS5sZW5ndGggLyAxMCk7CiAgICAgIHRoaXMuY2hhcnRPcHRpb24ueEF4aXNbMF0uYXhpc0xhYmVsLmludGVydmFsID0gMDsKCiAgICAgIGlmICh0aGlzLmNoYXJ0T3B0aW9uLnNlcmllc1swXS5kYXRhLmxlbmd0aCA+IDEwKSB7CiAgICAgICAgdGhpcy5jaGFydE9wdGlvbi54QXhpc1swXS5heGlzTGFiZWwuaW50ZXJ2YWwgPSBpbnRlcnZhbDsKICAgICAgfSAvL+iuvue9rnnovbTmnIDlpKflgLwKCgogICAgICB0aGlzLmNoYXJ0T3B0aW9uLnlBeGlzWzBdLm1heCA9IG1heCAqIDEuMzsgLy/orr7nva546L20CgogICAgICB0aGlzLmNoYXJ0T3B0aW9uLnhBeGlzWzBdLmRhdGEgPSBfZGF0ZTsgLy/phY3nva7mta7liqjmj5DnpLrmoYYKCiAgICAgIHN3aXRjaCAodGhpcy5zZW5zb3JUeXBlKSB7CiAgICAgICAgY2FzZSAn5rip5bqmJzoKICAgICAgICAgIHRoaXMuY2hhcnRPcHRpb24udG9vbHRpcC5mb3JtYXR0ZXIgPSBmdW5jdGlvbiAocGFyYW1zKSB7CiAgICAgICAgICAgIHZhciByZXN1bHQgPSAn5rip5bqmPGJyLz4nICsgcGFyYW1zWzBdLm5hbWU7CiAgICAgICAgICAgIHBhcmFtcy5mb3JFYWNoKGZ1bmN0aW9uIChpdGVtKSB7CiAgICAgICAgICAgICAgaWYgKGl0ZW0uZGF0YSkgewogICAgICAgICAgICAgICAgcmVzdWx0ICs9ICc8YnIvPicgKyAnPHNwYW4gc3R5bGU9ImRpc3BsYXk6aW5saW5lLWJsb2NrO21hcmdpbi1yaWdodDo1cHg7Ym9yZGVyLXJhZGl1czoxMHB4O3dpZHRoOjlweDtoZWlnaHQ6OXB4O2JhY2tncm91bmQtY29sb3I6JyArIGl0ZW0uY29sb3IgKyAnIj48L3NwYW4+JyArIGl0ZW0uc2VyaWVzTmFtZSArICcgOiAnICsgaXRlbS5kYXRhWzFdICsgJ+KEgyc7CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9KTsKICAgICAgICAgICAgcmV0dXJuIHJlc3VsdDsKICAgICAgICAgIH07CgogICAgICAgICAgYnJlYWs7CgogICAgICAgIGNhc2UgJ+a5v+W6pic6CiAgICAgICAgICB0aGlzLmNoYXJ0T3B0aW9uLnRvb2x0aXAuZm9ybWF0dGVyID0gdGhpcy5jaGFydE9wdGlvbi50b29sdGlwLmZvcm1hdHRlciA9IGZ1bmN0aW9uIChwYXJhbXMpIHsKICAgICAgICAgICAgdmFyIHJlc3VsdCA9ICfmub/luqY8YnIvPicgKyBwYXJhbXNbMF0ubmFtZTsKICAgICAgICAgICAgcGFyYW1zLmZvckVhY2goZnVuY3Rpb24gKGl0ZW0pIHsKICAgICAgICAgICAgICBpZiAoaXRlbS5kYXRhKSB7CiAgICAgICAgICAgICAgICByZXN1bHQgKz0gJzxici8+JyArICc8c3BhbiBzdHlsZT0iZGlzcGxheTppbmxpbmUtYmxvY2s7bWFyZ2luLXJpZ2h0OjVweDtib3JkZXItcmFkaXVzOjEwcHg7d2lkdGg6OXB4O2hlaWdodDo5cHg7YmFja2dyb3VuZC1jb2xvcjonICsgaXRlbS5jb2xvciArICciPjwvc3Bhbj4nICsgaXRlbS5zZXJpZXNOYW1lICsgJyA6ICcgKyBpdGVtLmRhdGFbMV0gKyAnJSc7CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9KTsKICAgICAgICAgICAgcmV0dXJuIHJlc3VsdDsKICAgICAgICAgIH07CgogICAgICAgICAgYnJlYWs7CgogICAgICAgIGNhc2UgJ+WFieeFpyc6CiAgICAgICAgICB0aGlzLmNoYXJ0T3B0aW9uLnRvb2x0aXAuZm9ybWF0dGVyID0gdGhpcy5jaGFydE9wdGlvbi50b29sdGlwLmZvcm1hdHRlciA9IGZ1bmN0aW9uIChwYXJhbXMpIHsKICAgICAgICAgICAgdmFyIHJlc3VsdCA9ICflhYnnhac8YnIvPicgKyBwYXJhbXNbMF0ubmFtZTsKICAgICAgICAgICAgcGFyYW1zLmZvckVhY2goZnVuY3Rpb24gKGl0ZW0pIHsKICAgICAgICAgICAgICBpZiAoaXRlbS5kYXRhKSB7CiAgICAgICAgICAgICAgICByZXN1bHQgKz0gJzxici8+JyArICc8c3BhbiBzdHlsZT0iZGlzcGxheTppbmxpbmUtYmxvY2s7bWFyZ2luLXJpZ2h0OjVweDtib3JkZXItcmFkaXVzOjEwcHg7d2lkdGg6OXB4O2hlaWdodDo5cHg7YmFja2dyb3VuZC1jb2xvcjonICsgaXRlbS5jb2xvciArICciPjwvc3Bhbj4nICsgaXRlbS5zZXJpZXNOYW1lICsgJyA6ICcgKyBpdGVtLmRhdGFbMV0gKyAnTHV4JzsKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0pOwogICAgICAgICAgICByZXR1cm4gcmVzdWx0OwogICAgICAgICAgfTsKCiAgICAgICAgICBicmVhazsKICAgICAgfQogICAgfQogIH0sCiAgd2F0Y2g6IHsKICAgIC8v55uR5ZCs5Lyg5oSf5Zmo57G75Z6L5bm25Y+K5pe256aB5q2i6YCJ5oup5peg5q2k5Lyg5oSf5Zmo55qE6K6+5aSHCiAgICBzZW5zb3JUeXBlOiB7CiAgICAgIGhhbmRsZXI6IGZ1bmN0aW9uIGhhbmRsZXIobmV3VmFsdWUpIHsKICAgICAgICB2YXIgdGVwOwoKICAgICAgICBzd2l0Y2ggKG5ld1ZhbHVlKSB7CiAgICAgICAgICBjYXNlICfmuKnluqYnOgogICAgICAgICAgICB0ZXAgPSAndGVtcCc7CiAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgIGNhc2UgJ+a5v+W6pic6CiAgICAgICAgICAgIHRlcCA9ICdodW0nOwogICAgICAgICAgICBicmVhazsKCiAgICAgICAgICBjYXNlICflhYnnhacnOgogICAgICAgICAgICB0ZXAgPSAnbHV4JzsKICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgfQoKICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHRoaXMuZGV2aWNlTGlzdC5sZW5ndGg7IGkrKykgewogICAgICAgICAgaWYgKHRoaXMuZGV2aWNlTGlzdFtpXS5zZW5zb3JMaXN0LmluY2x1ZGVzKHRlcCkpIHsKICAgICAgICAgICAgdGhpcy5kZXZpY2VMaXN0W2ldLmRpc2FibGVkID0gZmFsc2U7CiAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICB0aGlzLmRldmljZUxpc3RbaV0uZGlzYWJsZWQgPSB0cnVlOwogICAgICAgICAgfQogICAgICAgIH0KCiAgICAgICAgaWYgKG5ld1ZhbHVlID09ICfmuKnluqYnKSB7CiAgICAgICAgICB0aGlzLmNoYXJ0T3B0aW9uLnlBeGlzWzBdLm5hbWUgPSAn5rip5bqmLyDihIMnOwogICAgICAgICAgdGhpcy5jaGFydE9wdGlvbi55QXhpc1swXS5taW4gPSAwOwogICAgICAgICAgdGhpcy5jaGFydE9wdGlvbi55QXhpc1swXS5tYXggPSA1MDsKICAgICAgICAgIHRoaXMuY2hhcnRPcHRpb24ueUF4aXNbMF0uc3BsaXROdW1iZXIgPSA1OwogICAgICAgIH0gZWxzZSBpZiAobmV3VmFsdWUgPT0gJ+a5v+W6picpIHsKICAgICAgICAgIHRoaXMuY2hhcnRPcHRpb24ueUF4aXNbMF0ubmFtZSA9ICfmub/luqYvICUnOwogICAgICAgICAgdGhpcy5jaGFydE9wdGlvbi55QXhpc1swXS5taW4gPSAwOwogICAgICAgICAgdGhpcy5jaGFydE9wdGlvbi55QXhpc1swXS5tYXggPSAxMDA7CiAgICAgICAgICB0aGlzLmNoYXJ0T3B0aW9uLnlBeGlzWzBdLnNwbGl0TnVtYmVyID0gNTsKICAgICAgICB9IGVsc2UgaWYgKG5ld1ZhbHVlID09ICflhYnnhacnKSB7CiAgICAgICAgICB0aGlzLmNoYXJ0T3B0aW9uLnlBeGlzWzBdLm5hbWUgPSAn5YWJ54WnLyBMdXgnOwogICAgICAgICAgdGhpcy5jaGFydE9wdGlvbi55QXhpc1swXS5taW4gPSAwOwogICAgICAgICAgdGhpcy5jaGFydE9wdGlvbi55QXhpc1swXS5tYXggPSAxMDAwMDsKICAgICAgICAgIHRoaXMuY2hhcnRPcHRpb24ueUF4aXNbMF0uc3BsaXROdW1iZXIgPSA1OwogICAgICAgIH0KICAgICAgfSwKICAgICAgaW1tZWRpYXRlOiB0cnVlCiAgICB9LAogICAgZGF0ZVZhbHVlOiB7CiAgICAgIGhhbmRsZXI6IGZ1bmN0aW9uIGhhbmRsZXIobmV3VmFsdWUpIHsKICAgICAgICB2YXIgc3RhcnQgPSBuZXdWYWx1ZVswXS5zcGxpdCgnLScpOwogICAgICAgIHZhciBlbmQgPSBuZXdWYWx1ZVsxXS5zcGxpdCgnLScpOwogICAgICAgIHRoaXMuc3RhcnRUaW1lLnllYXIgPSBzdGFydFswXTsKICAgICAgICB0aGlzLnN0YXJ0VGltZS5tb250aCA9IHN0YXJ0WzFdOwogICAgICAgIHRoaXMuc3RhcnRUaW1lLmRheSA9IHN0YXJ0WzJdOwogICAgICAgIHRoaXMuZW5kVGltZS55ZWFyID0gZW5kWzBdOwogICAgICAgIHRoaXMuZW5kVGltZS5tb250aCA9IGVuZFsxXTsKICAgICAgICB0aGlzLmVuZFRpbWUuZGF5ID0gZW5kWzJdOwogICAgICB9LAogICAgICBpbW1lZGlhdGU6IHRydWUsCiAgICAgIGRlZXA6IHRydWUKICAgIH0KICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICAvL+mhtemdouaMgui9veWNs+ivt+axguiuvuWkh+WIl+ihqOaVsOaNrgogICAgZ2V0RGV2aWNlTGlzdCh0aGlzKTsgLy/nm5HlkKznqpflj6PlpKflsI/lj5jljJbmiafooYzlm77ooajliJ3lp4vljJYgIOWunueOsOiHqumAguW6lAoKICAgIHZhciByZXNpemVFdnQxID0gJ29yaWVudGF0aW9uY2hhbmdlJyBpbiB3aW5kb3cgPyAnb3JpZW50YXRpb25jaGFuZ2UnIDogJ3Jlc2l6ZSc7CiAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihyZXNpemVFdnQxLCB0aGlzLnJlc2l6ZUhhbmRsZSwgZmFsc2UpOwogICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignRE9NQ29udGVudExvYWRlZCcsIHRoaXMucmVzaXplSGFuZGxlLCBmYWxzZSk7CiAgfQp9Ow=="},{"version":3,"sources":["index.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <div class=\"top-view\">\n      <div class=\"selector-container\">\n        <div class=\"group-selector\" v-for=\"group in select\" :key=\"group.index\">\n          <div class=\"selector\">\n            <div class=\"index\">{{ group.index }}</div>\n            <div class=\"selector-tittle\">传感器类型：</div>\n            <el-select\n                class=\"picker\"\n                v-model=\"sensorType\">\n              <el-option\n                  class=\"picker\"\n                  v-for=\"item in sensorList\"\n                  :key=\"item.index\"\n                  :value=\"item\">\n              </el-option>\n            </el-select>\n          </div>\n          <div class=\"selector\">\n            <div class=\"selector-tittle\">设备节点：</div>\n            <el-select\n                class=\"picker\"\n                v-model=\"group.deviceId\">\n              <el-option\n                  class=\"picker\"\n                  v-for=\"item in deviceList\"\n                  :key=\"item.index\"\n                  :value=\"item.DeviceID\"\n                  :disabled=\"item.disabled\">\n              </el-option>\n            </el-select>\n          </div>\n          <div class=\"selector\">\n            <div class=\"selector-tittle\">时间范围：</div>\n            <el-date-picker\n                class=\"date-picker\"\n                v-model=\"dateValue\"\n                type=\"daterange\"\n                align=\"right\"\n                unlink-panels\n                range-separator=\"至\"\n                start-placeholder=\"开始日期\"\n                end-placeholder=\"结束日期\"\n                value-format=\"yyyy-MM-dd\"\n                :picker-options=\"datePickerOptions\"\n            >\n            </el-date-picker>\n          </div>\n        </div>\n      </div>\n      <button class=\"query\" @click=\"getData\">查询</button>\n      <button class=\"add\" @click=\"add\">+</button>\n      <button class=\"add\" @click=\"sub\">-</button>\n    </div>\n    <div class=\"bottom-view\">\n      <v-chart id=\"data-chart\" :options=\"chartOption\"/>\n    </div>\n  </div>\n</template>\n\n<script>\nimport {getDeviceList, getSensorData} from '../../../api/DataAnalysis'\n\nexport default {\n  name: \"index\",\n  data() {\n    return {\n      //设备列表 待请求数据赋值\n      //数据结构：\n      // {\n      //   deviceID: '123',\n      //   sensorList: ['温度', '湿度', '光照'],\n      //   disabled: false\n      // }\n      deviceList: [],\n      //选择的设备\n      select: [\n        {\n          index: 1,\n          deviceId: '',\n        }\n      ],\n      //可选择的传感器类型\n      sensorList: ['温度', '湿度', '光照'],\n      //选择的传感器类型\n      sensorType: '',\n      //日期挂载变量\n      dateValue: '',\n      startTime: {\n        year: '',\n        month: '',\n        day: ''\n      },\n      endTime: {\n        year: '',\n        month: '',\n        day: ''\n      },\n      //日期选择器配置项\n      datePickerOptions: {\n        shortcuts: [{\n          text: '最近一周',\n          onClick(picker) {\n            const end = new Date();\n            const start = new Date();\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 7);\n            picker.$emit('pick', [start, end]);\n          }\n        }, {\n          text: '最近一个月',\n          onClick(picker) {\n            const end = new Date();\n            const start = new Date();\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 30);\n            picker.$emit('pick', [start, end]);\n          }\n        }, {\n          text: '最近三个月',\n          onClick(picker) {\n            const end = new Date();\n            const start = new Date();\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 90);\n            picker.$emit('pick', [start, end]);\n          }\n        }]\n      },\n      //数据图表配置项\n      chartOption: {\n        title: {\n          text: '',\n          textStyle: {\n            align: 'center',\n            color: '#54D8FF',\n            fontSize: this.$rem(1),\n            fontWeight: this.$rem(25)\n          },\n          top: '0%',\n          left: 'center',\n        },\n        legend: {\n          icon: 'circle',\n          top: '5%',\n          right: '10%',\n          itemWidth: 6,\n          itemGap: 20,\n          textStyle: {\n            fontSize: this.$rem(0.8),\n            color: '#556677'\n          }\n        },\n        tooltip: {\n          trigger: 'axis',\n          formatter: '',\n          axisPointer: {\n            lineStyle: {\n              color: \"#54D8FF\"\n            },\n          },\n        },\n        grid: {\n          top: '15%',\n          left: '5%',\n          right: '9%',\n          bottom: '15%',\n          containLabel: true\n        },\n        xAxis: [{\n          type: 'category',\n          name: '日期',\n          splitNumber: 8,\n          nameTextStyle: {\n            color: '#A1A0AE',\n            fontSize: this.$rem(0.7),\n            grid: {\n              x: this.$rem(1)\n            }\n          },\n          axisLine: {\n            show: true,\n            lineStyle: {\n              color: '#EFF3F6',\n            }\n          },\n          splitArea: {\n            color: '#f00',\n            lineStyle: {\n              color: '#f00'\n            },\n          },\n          axisTick: {\n            show: false\n          },\n          axisLabel: {\n            lineStyle: {\n              color: '#EFF3F6',\n            },\n            interval: 0,\n            textStyle: {\n              color: '#A1A0AE',\n              fontSize: this.$rem(0.7)\n            }\n          },\n          splitLine: {\n            show: true,\n            lineStyle: {\n              color: '#EFF3F6'\n            }\n          },\n          boundaryGap: false,\n          data: [],\n\n        }],\n\n        yAxis: [{\n          type: 'value',\n          name: '',\n          nameTextStyle: {\n            color: \"#A1A0AE\",\n            fontSize: this.$rem(0.8)\n          },\n          min: null,\n          max: null,\n          splitNumber: 5,\n          splitLine: {\n            show: true,\n            lineStyle: {\n              color: '#EFF3F6'\n            }\n          },\n          axisLine: {\n            show: true,\n            lineStyle: {\n              color: '#EFF3F6'\n            }\n          },\n          axisLabel: {\n            show: true,\n            margin: this.$rem(0.8),\n            textStyle: {\n              color: '#A1A0AE',\n              fontSize: this.$rem(0.7)\n            }\n          },\n          axisTick: {\n            show: false,\n          },\n        },],\n        series: []\n      }\n    }\n  },\n  methods: {\n    //增加设备选择器\n    add() {\n      if (this.select.length >= 5) {\n        alert('最多只能选择五个!')\n      } else {\n        this.select.push({index: this.select.length + 1, deviceId: ''})\n      }\n    },\n    //减少设备选择器\n    sub() {\n      if (this.select.length <= 1) {\n        alert('最少保留一个!')\n      } else {\n        this.select.pop()\n      }\n      this.chartOption.series.pop()\n    },\n    //请求数据\n    getData() {\n      getSensorData(this)\n    },\n    resizeHandle() {\n      let myChart1 = this.$echarts.init(document.getElementById('data-chart'))\n      myChart1.resize()\n    },\n    //将多个设备的数据加到图表里\n    addSeries(chartData, max) {\n      /*\n      * 预定不同曲线的颜色\n      * date 日期数据中转变量\n      * data 数据项中转变量\n      * _date 最多数据的设备的日期中转变量（设为x轴）\n      * */\n      let colorList = ['#54D8FF', 'red', 'orange', 'pink', '#9272A3'],\n          date,\n          data = [],\n          _date = []\n      this.chartOption.series = []\n      for (let i = 0; i < chartData.length; i++) {\n        data = []\n        chartData[i].data.forEach((item) => {\n          if (i == 0) {\n            _date.push(`${item.Time.year}-${item.Time.month}-${item.Time.day}\\n${item.Time.hour}:${item.Time.minute}`)\n          }\n          date = `${item.Time.year}-${item.Time.month}-${item.Time.day}\\n${item.Time.hour}:${item.Time.minute}`\n          data.push([date, item.value])\n        })\n        this.chartOption.series.push(\n            {\n              name: chartData[i].deviceId,\n              type: 'line',\n              smooth: true, //是否平滑\n              showAllSymbol: true,\n              symbol: 'circle',\n              showSymbol: false,\n              symbolSize: this.$rem(0.1),\n              lineStyle: {\n                normal: {\n                  color: colorList[i],\n                  shadowColor: colorList[i],\n                  shadowBlur: 0,\n                  shadowOffsetY: 0,\n                  shadowOffsetX: 0,\n                  width: this.$rem(0.12)\n                },\n              },\n              label: {\n                show: true,\n                position: 'top',\n                textStyle: {\n                  color: colorList[i],\n                  fontSize: this.$rem(0.7)\n                }\n              },\n\n              itemStyle: {\n                color: colorList[i],\n              },\n              tooltip: {\n                show: true,\n              },\n              data: data\n            }\n        )\n      }\n      //如果数据项多于10条  则计算隔n条显示一个x轴数据项\n      let interval = parseInt((this.chartOption.series[0].data.length) / 10)\n      this.chartOption.xAxis[0].axisLabel.interval = 0\n      if ((this.chartOption.series[0].data.length) > 10) {\n        this.chartOption.xAxis[0].axisLabel.interval = interval\n      }\n      //设置y轴最大值\n      this.chartOption.yAxis[0].max = max * 1.3\n      //设置x轴\n      this.chartOption.xAxis[0].data = _date\n      //配置浮动提示框\n      switch (this.sensorType) {\n        case '温度':\n          this.chartOption.tooltip.formatter = function (params) {\n            var result = '温度<br/>' + params[0].name;\n            params.forEach(function (item) {\n              if (item.data) {\n                result += '<br/>' + '<span style=\"display:inline-block;margin-right:5px;border-radius:10px;width:9px;height:9px;background-color:' + item.color + '\"></span>' +\n                    item.seriesName + ' : ' + item.data[1] + '℃';\n              }\n            });\n            return result;\n          }\n          break\n        case '湿度':\n          this.chartOption.tooltip.formatter = this.chartOption.tooltip.formatter = function (params) {\n            var result = '湿度<br/>' + params[0].name;\n            params.forEach(function (item) {\n\n              if (item.data) {\n                result += '<br/>' + '<span style=\"display:inline-block;margin-right:5px;border-radius:10px;width:9px;height:9px;background-color:' + item.color + '\"></span>' +\n                    item.seriesName + ' : ' + item.data[1] + '%';\n              }\n            });\n            return result;\n          }\n          break\n        case '光照':\n          this.chartOption.tooltip.formatter = this.chartOption.tooltip.formatter = function (params) {\n            var result = '光照<br/>' + params[0].name;\n            params.forEach(function (item) {\n              if (item.data) {\n                result += '<br/>' + '<span style=\"display:inline-block;margin-right:5px;border-radius:10px;width:9px;height:9px;background-color:' + item.color + '\"></span>' +\n                    item.seriesName + ' : ' + item.data[1] + 'Lux';\n              }\n            });\n            return result;\n          }\n          break\n      }\n    }\n  },\n  watch: {\n    //监听传感器类型并及时禁止选择无此传感器的设备\n    sensorType: {\n      handler(newValue) {\n        let tep\n        switch (newValue) {\n          case '温度':\n            tep = 'temp';\n            break\n          case '湿度':\n            tep = 'hum';\n            break\n          case '光照':\n            tep = 'lux';\n            break\n        }\n        for (let i = 0; i < this.deviceList.length; i++) {\n          if (this.deviceList[i].sensorList.includes(tep)) {\n            this.deviceList[i].disabled = false\n          } else {\n            this.deviceList[i].disabled = true\n          }\n        }\n        if (newValue == '温度') {\n          this.chartOption.yAxis[0].name = '温度/ ℃'\n          this.chartOption.yAxis[0].min = 0\n          this.chartOption.yAxis[0].max = 50\n          this.chartOption.yAxis[0].splitNumber = 5\n        } else if (newValue == '湿度') {\n          this.chartOption.yAxis[0].name = '湿度/ %'\n          this.chartOption.yAxis[0].min = 0\n          this.chartOption.yAxis[0].max = 100\n          this.chartOption.yAxis[0].splitNumber = 5\n        } else if (newValue == '光照') {\n          this.chartOption.yAxis[0].name = '光照/ Lux'\n          this.chartOption.yAxis[0].min = 0\n          this.chartOption.yAxis[0].max = 10000\n          this.chartOption.yAxis[0].splitNumber = 5\n        }\n      },\n      immediate: true\n    },\n    dateValue: {\n      handler(newValue) {\n\n        let start = newValue[0].split('-')\n        let end = newValue[1].split('-')\n\n        this.startTime.year = start[0]\n        this.startTime.month = start[1]\n        this.startTime.day = start[2]\n\n        this.endTime.year = end[0]\n        this.endTime.month = end[1]\n        this.endTime.day = end[2]\n\n\n      },\n      immediate: true,\n      deep: true\n    }\n  },\n  mounted() {\n    //页面挂载即请求设备列表数据\n    getDeviceList(this)\n    //监听窗口大小变化执行图表初始化  实现自适应\n    var resizeEvt1 = 'orientationchange' in window ? 'orientationchange' : 'resize'\n    window.addEventListener(resizeEvt1, this.resizeHandle, false);\n    document.addEventListener('DOMContentLoaded', this.resizeHandle, false);\n\n  }\n}\n</script>\n\n<style lang=\"less\" scoped>\n.top-view {\n  display: flex;\n  flex-direction: row;\n}\n\n.selector-container {\n  display: flex;\n  flex-direction: column;\n  margin: 0 0 0 2rem;\n}\n\n.group-selector {\n  display: flex;\n  flex-direction: row;\n}\n\n.selector {\n  display: flex;\n  flex-direction: row;\n  margin: 2rem 2rem 0 1rem;\n  align-items: center;\n}\n\n.selector-tittle {\n  margin: 0 0 0 0;\n}\n\n.add {\n  border-radius: 100%;\n  background: #1890ff;\n  color: white;\n  width: 2rem;\n  height: 2rem;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 1.5rem;\n  padding: 0;\n  margin: 2rem 1rem 0 0.5rem;\n  border: #1890ff;\n}\n\n.index {\n  border-radius: 100%;\n  background: #1890ff;\n  color: white;\n  width: 1.5rem;\n  height: 1.5rem;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 1rem;\n  padding: 0;\n  margin: 0 1rem 0 0;\n}\n\n#data-chart {\n  height: 36rem;\n  width: 80rem;\n  margin: 0 0 0 1rem;\n}\n\n.query {\n  height: 2rem;\n  width: 4rem;\n  display: flex;\n  border: none;\n  background: #1890ff;\n  justify-content: center;\n  align-items: center;\n  color: white;\n  font-size: 1.1rem;\n  border-radius: 0.5rem;\n  margin: 2rem 1rem 0 0;\n}\n\n.picker {\n  width: 10rem;\n}\n\n.date-picker {\n  .el-input__inner {\n    width: 5rem;\n    height: 2rem;\n  }\n}\n</style>"],"sourceRoot":"src/components/DataAnalysis/SensingData"}]}